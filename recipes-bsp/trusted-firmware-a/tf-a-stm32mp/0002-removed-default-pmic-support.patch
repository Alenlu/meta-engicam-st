From ff467784cc792f659f1a643d6618171c379f66b9 Mon Sep 17 00:00:00 2001
From: Matteo Lisi <matteo.lisi@engicam.com>
Date: Fri, 23 Jul 2021 16:50:42 +0200
Subject: [PATCH] removed default pmic support

---
 drivers/st/pmic/stm32mp_pmic.c         | 94 +-------------------------
 fdts/stm32mp15-mx.dtsi                 | 44 ++++++------
 plat/st/stm32mp1/sp_min/sp_min_setup.c |  6 --
 plat/st/stm32mp1/stm32mp1_def.h        |  4 +-
 4 files changed, 25 insertions(+), 123 deletions(-)

diff --git a/drivers/st/pmic/stm32mp_pmic.c b/drivers/st/pmic/stm32mp_pmic.c
index 4e505debd..b45e490ff 100644
--- a/drivers/st/pmic/stm32mp_pmic.c
+++ b/drivers/st/pmic/stm32mp_pmic.c
@@ -36,7 +36,6 @@
 #define CMD_CONFIG_LP			2U
 
 static struct i2c_handle_s i2c_handle;
-static uint32_t pmic_i2c_addr;
 
 static int dt_get_pmic_node(void *fdt)
 {
@@ -313,52 +312,6 @@ static int pmic_operate(uint8_t command, const char *node_name,
 	return ret;
 }
 
-/*
- * Get PMIC and its I2C bus configuration from the device tree.
- * Return 0 on success, negative on error, 1 if no PMIC node is defined.
- */
-static int dt_pmic_i2c_config(struct dt_node_info *i2c_info,
-			      struct stm32_i2c_init_s *init)
-{
-	static int i2c_node = -FDT_ERR_NOTFOUND;
-
-	if (i2c_node == -FDT_ERR_NOTFOUND) {
-		void *fdt;
-		int pmic_node;
-		const fdt32_t *cuint;
-
-		if (fdt_get_address(&fdt) == 0) {
-			return -FDT_ERR_NOTFOUND;
-		}
-
-		pmic_node = dt_get_pmic_node(fdt);
-		if (pmic_node < 0) {
-			return 1;
-		}
-
-		cuint = fdt_getprop(fdt, pmic_node, "reg", NULL);
-		if (cuint == NULL) {
-			return -FDT_ERR_NOTFOUND;
-		}
-
-		pmic_i2c_addr = fdt32_to_cpu(*cuint) << 1;
-		if (pmic_i2c_addr > UINT16_MAX) {
-			return -FDT_ERR_BADVALUE;
-		}
-
-		i2c_node = fdt_parent_offset(fdt, pmic_node);
-		if (i2c_node < 0) {
-			return -FDT_ERR_NOTFOUND;
-		}
-	}
-
-	dt_fill_device_info(i2c_info, i2c_node);
-	if (i2c_info->base == 0U) {
-		return -FDT_ERR_NOTFOUND;
-	}
-
-	return stm32_i2c_get_setup_from_fdt(i2c_node, init);
-}
 
 int pmic_configure_boot_on_regulators(void)
 {
@@ -422,52 +375,7 @@ int pmic_set_regulator_min_voltage(const char *regu_name)
 
 bool initialize_pmic_i2c(void)
 {
-	int ret;
-	struct dt_node_info i2c_info;
-	struct i2c_handle_s *i2c = &i2c_handle;
-	struct stm32_i2c_init_s i2c_init;
-
-	ret = dt_pmic_i2c_config(&i2c_info, &i2c_init);
-	if (ret < 0) {
-		ERROR("I2C configuration failed %d\n", ret);
-		panic();
-	}
-
-	if (ret != 0) {
-		return false;
-	}
-
-	/* Initialize PMIC I2C */
-	i2c->i2c_base_addr		= i2c_info.base;
-	i2c->dt_status			= i2c_info.status;
-	i2c->clock			= i2c_info.clock;
-	i2c->i2c_state			= I2C_STATE_RESET;
-	i2c_init.own_address1		= pmic_i2c_addr;
-	i2c_init.addressing_mode	= I2C_ADDRESSINGMODE_7BIT;
-	i2c_init.dual_address_mode	= I2C_DUALADDRESS_DISABLE;
-	i2c_init.own_address2		= 0;
-	i2c_init.own_address2_masks	= I2C_OAR2_OA2NOMASK;
-	i2c_init.general_call_mode	= I2C_GENERALCALL_DISABLE;
-	i2c_init.no_stretch_mode	= I2C_NOSTRETCH_DISABLE;
-	i2c_init.analog_filter		= 1;
-	i2c_init.digital_filter_coef	= 0;
-
-	ret = stm32_i2c_init(i2c, &i2c_init);
-	if (ret != 0) {
-		ERROR("Cannot initialize I2C %x (%d)\n",
-		      i2c->i2c_base_addr, ret);
-		panic();
-	}
-
-	if (!stm32_i2c_is_device_ready(i2c, pmic_i2c_addr, 1,
-				       I2C_TIMEOUT_BUSY_MS)) {
-		ERROR("I2C device not ready\n");
-		panic();
-	}
-
-	stpmic1_bind_i2c(i2c, (uint16_t)pmic_i2c_addr);
-
-	return true;
+	return false;
 }
 
 static void register_pmic_shared_peripherals(void)
diff --git a/fdts/stm32mp15-mx.dtsi b/fdts/stm32mp15-mx.dtsi
index 3074d3a65..c8d146ff1 100644
--- a/fdts/stm32mp15-mx.dtsi
+++ b/fdts/stm32mp15-mx.dtsi
@@ -1,25 +1,25 @@
-/*
- * Copyright (C) 2015-2018, STMicroelectronics - All Rights Reserved
- *
- * SPDX-License-Identifier:	GPL-2.0+	BSD-3-Clause
- *
- */
-
-/*
- * File generated by STMicroelectronics STM32CubeMX DDR Tool for MPUs
- * DDR type: DDR3 / DDR3L
- * DDR width: 16bits
- * DDR density: 4Gb
- * System frequency: 528000kHz
- * Relaxed Timing Mode: false
- * Address mapping type: RBC
- *
- * Save Date: 2021.07.23, save Time: 15:53:59
- */
-
-#define DDR_MEM_NAME	"DDR3-DDR3L 16bits 528000kHz"
-#define DDR_MEM_SPEED	528000
-#define DDR_MEM_SIZE	0x20000000
+/*
+ * Copyright (C) 2015-2018, STMicroelectronics - All Rights Reserved
+ *
+ * SPDX-License-Identifier:	GPL-2.0+	BSD-3-Clause
+ *
+ */
+
+/*
+ * File generated by STMicroelectronics STM32CubeMX DDR Tool for MPUs
+ * DDR type: DDR3 / DDR3L
+ * DDR width: 16bits
+ * DDR density: 4Gb
+ * System frequency: 528000kHz
+ * Relaxed Timing Mode: false
+ * Address mapping type: RBC
+ *
+ * Save Date: 2021.07.23, save Time: 14:33:00
+ */
+
+#define DDR_MEM_NAME	"DDR3-DDR3L 16bits 528000kHz"
+#define DDR_MEM_SPEED	528000
+#define DDR_MEM_SIZE	0x20000000
 
 #define DDR_MSTR 0x00041401
 #define DDR_MRCTRL0 0x00000010
diff --git a/plat/st/stm32mp1/sp_min/sp_min_setup.c b/plat/st/stm32mp1/sp_min/sp_min_setup.c
index 0065be44f..fcb9237ee 100644
--- a/plat/st/stm32mp1/sp_min/sp_min_setup.c
+++ b/plat/st/stm32mp1/sp_min/sp_min_setup.c
@@ -536,16 +536,10 @@ void sp_min_early_platform_setup2(u_register_t arg0, u_register_t arg1,
 		INFO("Non-secure device tree not found\n");
 	}
 #endif
-
-	if (dt_pmic_status() > 0) {
-		initialize_pmic();
-	}
-
 	disable_usb_phy_regulator();
 
 	initialize_pll1_settings();
 
-	stm32mp1_init_lp_states();
 }
 
 static void init_sec_peripherals(void)
diff --git a/plat/st/stm32mp1/stm32mp1_def.h b/plat/st/stm32mp1/stm32mp1_def.h
index 027dba1bd..390fb1047 100644
--- a/plat/st/stm32mp1/stm32mp1_def.h
+++ b/plat/st/stm32mp1/stm32mp1_def.h
@@ -162,7 +162,7 @@ enum ddr_type {
 #define STM32MP_BL2_RO_SIZE		U(0x00014000)	/* 80 KB */
 #define STM32MP_BL2_SIZE		U(0x0001B000)	/* 108 KB for BL2 */
 #else
-#define STM32MP_BL2_RO_SIZE		U(0x00010000)	/* 64 KB */
+#define STM32MP_BL2_RO_SIZE		U(0x00011000)	/* 64 KB */
 #define STM32MP_BL2_SIZE		U(0x00015000)	/* 84 KB for BL2 */
 #endif
 
@@ -177,7 +177,7 @@ enum ddr_type {
 
 #define STM32MP_BL2_RW_SIZE		STM32MP_SEC_SYSRAM_BASE + \
 					STM32MP_SEC_SYSRAM_SIZE - \
-					STM32MP_BL2_RW_BASE
+					STM32MP_BL2_RW_BASE + 8192
 
 #if STM32MP_SP_MIN_IN_DDR
 #define STM32MP_BL32_SIZE		U(0x00025000)	/* 148 KB for BL32 */
