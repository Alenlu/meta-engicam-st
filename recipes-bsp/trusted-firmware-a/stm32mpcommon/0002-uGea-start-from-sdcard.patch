From 61cd4e1f10154e79bc885d29d0814fea3037cefc Mon Sep 17 00:00:00 2001
From: Matteo Lisi <matteo.lisi@engicam.com>
Date: Thu, 7 Mar 2019 12:14:17 +0100
Subject: [PATCH 2/6] uGea start from sdcard

---
 fdts/stm32mp15-mx.h            |  38 +--
 fdts/stm32mp157a-ugeast-mx.dts | 571 +++++++++++++++++++--------------
 2 files changed, 347 insertions(+), 262 deletions(-)

diff --git a/fdts/stm32mp15-mx.h b/fdts/stm32mp15-mx.h
index 44b8a8b..19d048d 100644
--- a/fdts/stm32mp15-mx.h
+++ b/fdts/stm32mp15-mx.h
@@ -10,15 +10,15 @@
  * DDR type: DDR3 / DDR3L
  * DDR width: 16bits
  * DDR density: 2Gb
- * System frequency: 400000Khz
+ * System frequency: 528000Khz
  * Relaxed Timing Mode: false
  * Address mapping type: RBC
  *
- * Save Date: 2019.03.06, save Time: 16:13:54
+ * Save Date: 2019.03.06, save Time: 17:34:08
  */
 
-#define DDR_MEM_NAME	"DDR3-DDR3L 16bits 400000Khz"
-#define DDR_MEM_SPEED	400000
+#define DDR_MEM_NAME	"DDR3-DDR3L 16bits 528000Khz"
+#define DDR_MEM_SPEED	528000
 #define DDR_MEM_SIZE	0x10000000
 
 #define DDR_MSTR 0x00041401
@@ -31,20 +31,20 @@
 #define DDR_HWLPCTL 0x00000000
 #define DDR_RFSHCTL0 0x00210000
 #define DDR_RFSHCTL3 0x00000000
-#define DDR_RFSHTMG 0x00610068
+#define DDR_RFSHTMG 0x0080008A
 #define DDR_CRCPARCTL0 0x00000000
-#define DDR_DRAMTMG0 0x0F141B0F
-#define DDR_DRAMTMG1 0x000A0415
-#define DDR_DRAMTMG2 0x0506080E
+#define DDR_DRAMTMG0 0x121B2414
+#define DDR_DRAMTMG1 0x000A041C
+#define DDR_DRAMTMG2 0x0608090F
 #define DDR_DRAMTMG3 0x0050400C
-#define DDR_DRAMTMG4 0x06040406
-#define DDR_DRAMTMG5 0x05050403
+#define DDR_DRAMTMG4 0x08040608
+#define DDR_DRAMTMG5 0x06060403
 #define DDR_DRAMTMG6 0x02020002
 #define DDR_DRAMTMG7 0x00000202
 #define DDR_DRAMTMG8 0x00001005
 #define DDR_DRAMTMG14 0x000000A0
 #define DDR_ZQCTL0 0xC2000040
-#define DDR_DFITMG0 0x02040104
+#define DDR_DFITMG0 0x02060105
 #define DDR_DFITMG1 0x00000202
 #define DDR_DFILPCFG0 0x07000000
 #define DDR_DFIUPD0 0xC0400003
@@ -85,19 +85,19 @@
 #define DDR_ADDRMAP10 0x00000000
 #define DDR_ADDRMAP11 0x00000000
 #define DDR_PGCR 0x01442E02
-#define DDR_PTR0 0x00220014
-#define DDR_PTR1 0x03630D40
-#define DDR_PTR2 0x042D3880
+#define DDR_PTR0 0x0022A41B
+#define DDR_PTR1 0x047C0740
+#define DDR_PTR2 0x042D9C80
 #define DDR_ACIOCR 0x10400812
 #define DDR_DXCCR 0x00000C40
 #define DDR_DSGCR 0xF200001F
 #define DDR_DCR 0x0000000B
-#define DDR_DTPR0 0x2A8F66D0
-#define DDR_DTPR1 0x096800A0
-#define DDR_DTPR2 0x10022A00
-#define DDR_MR0 0x00000420
+#define DDR_DTPR0 0x38D488D0
+#define DDR_DTPR1 0x098A00D8
+#define DDR_DTPR2 0x10023600
+#define DDR_MR0 0x00000840
 #define DDR_MR1 0x00000000
-#define DDR_MR2 0x00000200
+#define DDR_MR2 0x00000208
 #define DDR_MR3 0x00000000
 #define DDR_ODTCR 0x00010000
 #define DDR_ZQ0CR1 0x00000038
diff --git a/fdts/stm32mp157a-ugeast-mx.dts b/fdts/stm32mp157a-ugeast-mx.dts
index 6a3a26a..bb0e3a4 100644
--- a/fdts/stm32mp157a-ugeast-mx.dts
+++ b/fdts/stm32mp157a-ugeast-mx.dts
@@ -1,243 +1,328 @@
-/* SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause) */
-/*
- * Copyright (C) STMicroelectronics 2019 - All Rights Reserved
- * Author: STM32CubeMX code generation for STMicroelectronics.
- */
-
-/dts-v1/;
-#include <dt-bindings/clock/stm32mp1-clksrc.h>
-#include "stm32mp15-mx.h"
-
-#include "stm32mp157c.dtsi"
-#include "stm32mp157cac-pinctrl.dtsi"
-#include "stm32mp15-ddr.dtsi"
-#include "stm32mp157c-security.dtsi"
-
-/* USER CODE BEGIN includes */
-/* USER CODE END includes */
-
-/ {
-	model = "STMicroelectronics custom STM32CubeMX board";
-	compatible = "st,stm32mp157a-ugeast-mx", "st,stm32mp157";
-
-	/* USER CODE BEGIN root */
-
-	aliases {
-		serial0 = &uart4;
-		serial1 = &usart3;
-		serial2 = &uart7;
-	};
-
-	chosen {
-		stdout-path = "serial0:115200n8";
-	};
-
-	/* USER CODE END root */
-
-clocks {
-    /* USER CODE BEGIN clocks */
-    /* USER CODE END clocks */
-
-    clk_lse: clk-lse {
-        /* USER CODE BEGIN clocks */
-        /* USER CODE END clocks */
-        st,drive=<LSEDRV_LOWEST>;
-    };
-    clk_hse: clk-hse {
-        /* USER CODE BEGIN clocks */
-        /* USER CODE END clocks */
-    };
-};
-
-}; /*root*/
-
-&pinctrl {
-    fmc_pins_mx: fmc_mx-0 {
-        pins1 {
-            pinmux = <STM32_PINMUX('D', 0, AF12)>, /* FMC_D2 */
-                     <STM32_PINMUX('D', 1, AF12)>, /* FMC_D3 */
-                     <STM32_PINMUX('D', 4, AF12)>, /* FMC_NOE */
-                     <STM32_PINMUX('D', 5, AF12)>, /* FMC_NWE */
-                     <STM32_PINMUX('D', 11, AF12)>, /* FMC_CLE */
-                     <STM32_PINMUX('D', 12, AF12)>, /* FMC_ALE */
-                     <STM32_PINMUX('D', 14, AF12)>, /* FMC_D0 */
-                     <STM32_PINMUX('D', 15, AF12)>, /* FMC_D1 */
-                     <STM32_PINMUX('E', 7, AF12)>, /* FMC_D4 */
-                     <STM32_PINMUX('E', 8, AF12)>, /* FMC_D5 */
-                     <STM32_PINMUX('E', 9, AF12)>, /* FMC_D6 */
-                     <STM32_PINMUX('E', 10, AF12)>, /* FMC_D7 */
-                     <STM32_PINMUX('G', 9, AF12)>; /* FMC_NCE */
-            bias-disable;
-            drive-push-pull;
-            slew-rate = <1>;
-        };
-        pins2 {
-            pinmux = <STM32_PINMUX('D', 6, AF12)>; /* FMC_NWAIT */
-            bias-disable;
-        };
-    };
-    rtc_pins_mx: rtc_mx-0 {
-        pins {
-            pinmux = <STM32_PINMUX('I', 8, ANALOG)>; /* RTC_LSCO */
-        };
-    };
-    sdmmc1_pins_mx: sdmmc1_mx-0 {
-        pins {
-            pinmux = <STM32_PINMUX('C', 8, AF12)>, /* SDMMC1_D0 */
-                     <STM32_PINMUX('C', 9, AF12)>, /* SDMMC1_D1 */
-                     <STM32_PINMUX('C', 10, AF12)>, /* SDMMC1_D2 */
-                     <STM32_PINMUX('C', 11, AF12)>, /* SDMMC1_D3 */
-                     <STM32_PINMUX('C', 12, AF12)>, /* SDMMC1_CK */
-                     <STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
-            bias-pull-up;
-            drive-push-pull;
-            slew-rate = <3>;
-        };
-    };
-    uart4_pins_mx: uart4_mx-0 {
-        pins1 {
-            pinmux = <STM32_PINMUX('G', 11, AF6)>; /* UART4_TX */
-            bias-disable;
-            drive-push-pull;
-            slew-rate = <0>;
-        };
-        pins2 {
-            pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
-            bias-disable;
-        };
-    };
-};
-
-&rcc {
-    st,hsi-cal;
-    st,csi-cal;
-    st,cal-sec = <60>;
-    st,clksrc = <
-        CLK_MPU_PLL1P
-        CLK_AXI_PLL2P
-        CLK_MCU_HSI
-        CLK_PLL12_HSI
-        CLK_PLL3_HSE
-        CLK_PLL4_HSE
-        CLK_RTC_LSE
-        CLK_MCO1_DISABLED
-        CLK_MCO2_DISABLED
-    >;
-    st,clkdiv = <
-        1         /*MPU*/
-        1         /*AXI*/
-        0         /*MCU*/
-        0         /*APB1*/
-        0         /*APB2*/
-        0         /*APB3*/
-        1         /*APB4*/
-        2         /*APB5*/
-        0         /*RTC*/
-        0         /*MCO1*/
-        0         /*MCO2*/
-    >;
-    st,pkcs = <
-        CLK_CKPER_DISABLED
-        CLK_FMC_ACLK
-        CLK_ETH_PLL4P
-        CLK_SDMMC12_HSI
-        CLK_STGEN_HSI
-        CLK_USBPHY_HSE
-        CLK_SPI2S1_DISABLED
-        CLK_SPI2S23_DISABLED
-        CLK_SPI45_DISABLED
-        CLK_SPI6_DISABLED
-        CLK_I2C46_CSI
-        CLK_SDMMC3_HCLK2
-        CLK_USBO_PLL4R
-        CLK_ADC_DISABLED
-        CLK_CEC_DISABLED
-        CLK_I2C12_PCLK1
-        CLK_I2C35_DISABLED
-        CLK_UART1_DISABLED
-        CLK_UART24_PCLK1
-        CLK_UART35_DISABLED
-        CLK_UART6_DISABLED
-        CLK_UART78_DISABLED
-        CLK_SPDIF_PLL4P
-        CLK_FDCAN_HSE
-        CLK_SAI1_DISABLED
-        CLK_SAI2_SPDIF
-        CLK_SAI3_DISABLED
-        CLK_SAI4_DISABLED
-        CLK_LPTIM1_DISABLED
-        CLK_LPTIM23_DISABLED
-        CLK_LPTIM45_DISABLED
-    >;
-    pll1:st,pll@0 {
-        cfg = < 3 24 0 1 1 1>;
-    };
-    pll2:st,pll@1 {
-        cfg = < 3 24 1 0 0 7>;
-    };
-    pll4:st,pll@3 {
-        cfg = < 1 49 11 6 0 7>;
-    };
-};
-
-&bsec{
-    status = "okay";
-    secure-status = "okay";
-
-    /* USER CODE BEGIN bsec */
-    /* USER CODE END bsec */
-};
-
-&fmc{
-    pinctrl-names = "default";
-    pinctrl-0 = <&fmc_pins_mx>;
-    status = "okay";
-
-    /* USER CODE BEGIN fmc */
-    /* USER CODE END fmc */
-};
-
-&rcc{
-    status = "okay";
-    secure-status = "okay";
-
-    /* USER CODE BEGIN rcc */
-    /* USER CODE END rcc */
-};
-
-&rtc{
-    pinctrl-names = "default";
-    pinctrl-0 = <&rtc_pins_mx>;
-    status = "okay";
-    secure-status = "okay";
-
-    /* USER CODE BEGIN rtc */
-    /* USER CODE END rtc */
-};
-
-&sdmmc1{
-    pinctrl-names = "default";
-    pinctrl-0 = <&sdmmc1_pins_mx>;
-    status = "okay";
-
-    /* USER CODE BEGIN sdmmc1 */
-    no-removable;
-    st,dirpol;
-    st,negedge;
-    bus-width=<4>;
-    /* USER CODE END sdmmc1 */
-};
-
-&uart4{
-    pinctrl-names = "default";
-    pinctrl-0 = <&uart4_pins_mx>;
-    status = "okay";
-
-    /* USER CODE BEGIN uart4 */
-    resets = <&rcc UART4_R>;
-    /* USER CODE END uart4 */
-};
-
-/* USER CODE BEGIN addons */
-/* USER CODE END addons */
-
+/* SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause) */
+/*
+ * Copyright (C) STMicroelectronics 2019 - All Rights Reserved
+ * Author: STM32CubeMX code generation for STMicroelectronics.
+ */
+
+/dts-v1/;
+#include <dt-bindings/clock/stm32mp1-clksrc.h>
+#include <dt-bindings/power/stm32mp1-power.h>
+
+#include "stm32mp15-mx.h"
+
+#include "stm32mp157c.dtsi"
+#include "stm32mp157cac-pinctrl.dtsi"
+#include "stm32mp15-ddr.dtsi"
+#include "stm32mp157c-security.dtsi"
+
+
+/* USER CODE BEGIN includes */
+/* USER CODE END includes */
+
+/ {
+	model = "STMicroelectronics custom STM32CubeMX board";
+	compatible = "st,stm32mp157a-ugeast-mx", "st,stm32mp157";
+
+	/* USER CODE BEGIN root */
+
+	aliases {
+		serial0 = &uart4;
+		serial1 = &usart3;
+		serial2 = &uart7;
+	};
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	/* USER CODE END root */
+
+clocks {
+    /* USER CODE BEGIN clocks */
+    /* USER CODE END clocks */
+
+    clk_lse: clk-lse {
+        /* USER CODE BEGIN clocks */
+        /* USER CODE END clocks */
+        st,drive=<LSEDRV_MEDIUM_HIGH>;
+    };
+    clk_hse: clk-hse {
+        /* USER CODE BEGIN clocks */
+        /* USER CODE END clocks */
+    };
+};
+
+}; /*root*/
+
+&pinctrl {
+    fmc_pins_mx: fmc_mx-0 {
+        pins1 {
+            pinmux = <STM32_PINMUX('D', 0, AF12)>, /* FMC_D2 */
+                     <STM32_PINMUX('D', 1, AF12)>, /* FMC_D3 */
+                     <STM32_PINMUX('D', 4, AF12)>, /* FMC_NOE */
+                     <STM32_PINMUX('D', 5, AF12)>, /* FMC_NWE */
+                     <STM32_PINMUX('D', 11, AF12)>, /* FMC_CLE */
+                     <STM32_PINMUX('D', 12, AF12)>, /* FMC_ALE */
+                     <STM32_PINMUX('D', 14, AF12)>, /* FMC_D0 */
+                     <STM32_PINMUX('D', 15, AF12)>, /* FMC_D1 */
+                     <STM32_PINMUX('E', 7, AF12)>, /* FMC_D4 */
+                     <STM32_PINMUX('E', 8, AF12)>, /* FMC_D5 */
+                     <STM32_PINMUX('E', 9, AF12)>, /* FMC_D6 */
+                     <STM32_PINMUX('E', 10, AF12)>, /* FMC_D7 */
+                     <STM32_PINMUX('G', 9, AF12)>; /* FMC_NCE */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <1>;
+        };
+        pins2 {
+            pinmux = <STM32_PINMUX('D', 6, AF12)>; /* FMC_NWAIT */
+            bias-disable;
+        };
+    };
+    rtc_pins_mx: rtc_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('I', 8, ANALOG)>; /* RTC_LSCO */
+        };
+    };
+    sdmmc1_pins_mx: sdmmc1_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('C', 8, AF12)>, /* SDMMC1_D0 */
+                     <STM32_PINMUX('C', 9, AF12)>, /* SDMMC1_D1 */
+                     <STM32_PINMUX('C', 10, AF12)>, /* SDMMC1_D2 */
+                     <STM32_PINMUX('C', 11, AF12)>, /* SDMMC1_D3 */
+                     <STM32_PINMUX('C', 12, AF12)>, /* SDMMC1_CK */
+                     <STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
+            bias-pull-up;
+            drive-push-pull;
+            slew-rate = <3>;
+        };
+    };
+    uart4_pins_mx: uart4_mx-0 {
+        pins1 {
+            pinmux = <STM32_PINMUX('G', 11, AF6)>; /* UART4_TX */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <0>;
+        };
+        pins2 {
+            pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
+            bias-disable;
+        };
+    };
+    usart1_pins_mx: usart1_mx-0 {
+        pins1 {
+            pinmux = <STM32_PINMUX('B', 15, AF4)>; /* USART1_RX */
+            bias-disable;
+        };
+        pins2 {
+            pinmux = <STM32_PINMUX('B', 14, AF4)>; /* USART1_TX */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <0>;
+        };
+    };
+    usart3_pins_mx: usart3_mx-0 {
+        pins1 {
+            pinmux = <STM32_PINMUX('B', 12, AF8)>; /* USART3_RX */
+            bias-disable;
+        };
+        pins2 {
+            pinmux = <STM32_PINMUX('B', 10, AF7)>; /* USART3_TX */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <0>;
+        };
+    };
+    usart6_pins_mx: usart6_mx-0 {
+        pins1 {
+            pinmux = <STM32_PINMUX('C', 7, AF7)>; /* USART6_RX */
+            bias-disable;
+        };
+        pins2 {
+            pinmux = <STM32_PINMUX('C', 6, AF7)>; /* USART6_TX */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <0>;
+        };
+    };
+};
+
+&rcc {
+    st,hsi-cal;
+    st,csi-cal;
+    st,cal-sec = <60>;
+    st,clksrc = <
+        CLK_MPU_PLL1P
+        CLK_AXI_PLL2P
+        CLK_MCU_HSI
+        CLK_PLL12_HSI
+        CLK_PLL3_HSI
+        CLK_PLL4_HSE
+        CLK_RTC_LSE
+        CLK_MCO1_DISABLED
+        CLK_MCO2_DISABLED
+    >;
+    st,clkdiv = <
+        1         /*MPU*/
+        1         /*AXI*/
+        0         /*MCU*/
+        0         /*APB1*/
+        0         /*APB2*/
+        0         /*APB3*/
+        1         /*APB4*/
+        1         /*APB5*/
+        0         /*RTC*/
+        0         /*MCO1*/
+        0         /*MCO2*/
+    >;
+    st,pkcs = <
+        CLK_CKPER_DISABLED
+        CLK_FMC_ACLK
+        CLK_ETH_PLL4P
+        CLK_SDMMC12_HSI
+        CLK_STGEN_HSI
+        CLK_USBPHY_HSE
+        CLK_SPI2S1_DISABLED
+        CLK_SPI2S23_DISABLED
+        CLK_SPI45_DISABLED
+        CLK_SPI6_DISABLED
+        CLK_I2C46_CSI
+        CLK_SDMMC3_HCLK2
+        CLK_USBO_PLL4R
+        CLK_ADC_DISABLED
+        CLK_CEC_DISABLED
+        CLK_I2C12_PCLK1
+        CLK_I2C35_DISABLED
+        CLK_UART1_PCLK5
+        CLK_UART24_HSE
+        CLK_UART35_PCLK1
+        CLK_UART6_PCLK2
+        CLK_UART78_DISABLED
+        CLK_SPDIF_PLL4P
+        CLK_FDCAN_HSE
+        CLK_SAI1_DISABLED
+        CLK_SAI2_SPDIF
+        CLK_SAI3_DISABLED
+        CLK_SAI4_DISABLED
+        CLK_LPTIM1_DISABLED
+        CLK_LPTIM23_DISABLED
+        CLK_LPTIM45_DISABLED
+    >;
+    pll1:st,pll@0 {
+        cfg = < 3 39 0 1 1 1>;
+    };
+    pll2:st,pll@1 {
+        cfg = < 3 32 1 0 0 7>;
+    };
+    pll4:st,pll@3 {
+        cfg = < 1 49 11 10 1 7>;
+    };
+};
+
+&bsec{
+    status = "okay";
+    secure-status = "okay";
+
+    /* USER CODE BEGIN bsec */
+    /* USER CODE END bsec */
+};
+
+&fmc{
+    pinctrl-names = "default";
+    pinctrl-0 = <&fmc_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN fmc */
+    /* USER CODE END fmc */
+};
+
+&iwdg2{
+    status = "okay";
+    secure-status = "okay";
+
+    /* USER CODE BEGIN iwdg2 */
+    instance = <2>;
+    timeout-sec = <32>;
+    /* USER CODE END iwdg2 */
+};
+
+&rcc{
+    status = "okay";
+    secure-status = "okay";
+
+    /* USER CODE BEGIN rcc */
+    /* USER CODE END rcc */
+};
+
+&rtc{
+    pinctrl-names = "default";
+    pinctrl-0 = <&rtc_pins_mx>;
+    status = "okay";
+    secure-status = "okay";
+
+    /* USER CODE BEGIN rtc */
+    /* USER CODE END rtc */
+};
+
+&sdmmc1{
+    pinctrl-names = "default";
+    pinctrl-0 = <&sdmmc1_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN sdmmc1 */
+    no-removable;
+    st,dirpol;
+    st,negedge;
+    bus-width=<4>;
+    /* USER CODE END sdmmc1 */
+};
+
+&uart4{
+    pinctrl-names = "default";
+    pinctrl-0 = <&uart4_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN uart4 */
+    resets = <&rcc UART4_R>;
+    /* USER CODE END uart4 */
+};
+
+&usart1{
+    pinctrl-names = "default";
+    pinctrl-0 = <&usart1_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN usart1 */
+    /* USER CODE END usart1 */
+};
+
+&usart3{
+    pinctrl-names = "default";
+    pinctrl-0 = <&usart3_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN usart3 */
+    /* USER CODE END usart3 */
+};
+
+&usart6{
+    pinctrl-names = "default";
+    pinctrl-0 = <&usart6_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN usart6 */
+    /* USER CODE END usart6 */
+};
+
+/* USER CODE BEGIN addons */
+&pwr {
+	system_suspend_supported_soc_modes = <
+		STM32_PM_CSLEEP_RUN
+		STM32_PM_CSTOP_ALLOW_LP_STOP
+		STM32_PM_CSTOP_ALLOW_STANDBY_DDR_SR
+	>;
+
+	system_off_soc_mode = <STM32_PM_CSTOP_ALLOW_STANDBY_DDR_OFF>;
+};
+/* USER CODE END addons */
+
-- 
2.17.1

