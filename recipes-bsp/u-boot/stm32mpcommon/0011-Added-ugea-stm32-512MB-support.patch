From abebfe68aae64ba9a6053ab51dbe9a23a95e241f Mon Sep 17 00:00:00 2001
From: Mirko Ardinghi <mirko.ardinghi@engicam.com>
Date: Tue, 6 Aug 2019 15:47:30 +0200
Subject: [PATCH] Added ugea stm32 512MB support

---
 arch/arm/dts/stm32mp15-512-mx.h               | 119 +++
 .../dts/stm32mp157a-ugeast-512-mx-u-boot.dtsi | 223 +++++
 arch/arm/dts/stm32mp157a-ugeast-512-mx.dts    | 791 ++++++++++++++++++
 arch/arm/dts/stm32mp157a-ugeast-mx.dts        |   1 +
 .../stm32mp15_ugeast_512_trusted_defconfig    | 104 +++
 5 files changed, 1238 insertions(+)
 create mode 100644 arch/arm/dts/stm32mp15-512-mx.h
 create mode 100644 arch/arm/dts/stm32mp157a-ugeast-512-mx-u-boot.dtsi
 create mode 100644 arch/arm/dts/stm32mp157a-ugeast-512-mx.dts
 create mode 100644 configs/stm32mp15_ugeast_512_trusted_defconfig

diff --git a/arch/arm/dts/stm32mp15-512-mx.h b/arch/arm/dts/stm32mp15-512-mx.h
new file mode 100644
index 0000000..f87e9cc
--- /dev/null
+++ b/arch/arm/dts/stm32mp15-512-mx.h
@@ -0,0 +1,119 @@
+/*
+ * Copyright (C) 2015-2018, STMicroelectronics - All Rights Reserved
+ *
+ * SPDX-License-Identifier:	GPL-2.0+	BSD-3-Clause
+ *
+ */
+
+/*
+ * File generated by STMicroelectronics STM32CubeMX DDR Tool for MPUs
+ * DDR type: DDR3 / DDR3L
+ * DDR width: 16bits
+ * DDR density: 4Gb
+ * System frequency: 533000Khz
+ * Relaxed Timing Mode: false
+ * Address mapping type: RBC
+ *
+ * Save Date: 2019.08.06, save Time: 10:37:14
+ */
+
+#define DDR_MEM_NAME	"DDR3-DDR3L 16bits 533000Khz"
+#define DDR_MEM_SPEED	533000
+#define DDR_MEM_SIZE	0x20000000
+
+#define DDR_MSTR 0x00041401
+#define DDR_MRCTRL0 0x00000010
+#define DDR_MRCTRL1 0x00000000
+#define DDR_DERATEEN 0x00000000
+#define DDR_DERATEINT 0x00800000
+#define DDR_PWRCTL 0x00000000
+#define DDR_PWRTMG 0x00400010
+#define DDR_HWLPCTL 0x00000000
+#define DDR_RFSHCTL0 0x00210000
+#define DDR_RFSHCTL3 0x00000000
+#define DDR_RFSHTMG 0x0081008B
+#define DDR_CRCPARCTL0 0x00000000
+#define DDR_DRAMTMG0 0x121B2414
+#define DDR_DRAMTMG1 0x000A041C
+#define DDR_DRAMTMG2 0x0608090F
+#define DDR_DRAMTMG3 0x0050400C
+#define DDR_DRAMTMG4 0x08040608
+#define DDR_DRAMTMG5 0x06060403
+#define DDR_DRAMTMG6 0x02020002
+#define DDR_DRAMTMG7 0x00000202
+#define DDR_DRAMTMG8 0x00001005
+#define DDR_DRAMTMG14 0x000000A0
+#define DDR_ZQCTL0 0xC2000040
+#define DDR_DFITMG0 0x02060105
+#define DDR_DFITMG1 0x00000202
+#define DDR_DFILPCFG0 0x07000000
+#define DDR_DFIUPD0 0xC0400003
+#define DDR_DFIUPD1 0x00000000
+#define DDR_DFIUPD2 0x00000000
+#define DDR_DFIPHYMSTR 0x00000000
+#define DDR_ODTCFG 0x06000600
+#define DDR_ODTMAP 0x00000001
+#define DDR_SCHED 0x00000C01
+#define DDR_SCHED1 0x00000000
+#define DDR_PERFHPR1 0x01000001
+#define DDR_PERFLPR1 0x08000200
+#define DDR_PERFWR1 0x08000400
+#define DDR_DBG0 0x00000000
+#define DDR_DBG1 0x00000000
+#define DDR_DBGCMD 0x00000000
+#define DDR_POISONCFG 0x00000000
+#define DDR_PCCFG 0x00000010
+#define DDR_PCFGR_0 0x00010000
+#define DDR_PCFGW_0 0x00000000
+#define DDR_PCFGQOS0_0 0x02100C03
+#define DDR_PCFGQOS1_0 0x00800100
+#define DDR_PCFGWQOS0_0 0x01100C03
+#define DDR_PCFGWQOS1_0 0x01000200
+#define DDR_PCFGR_1 0x00010000
+#define DDR_PCFGW_1 0x00000000
+#define DDR_PCFGQOS0_1 0x02100C03
+#define DDR_PCFGQOS1_1 0x00800040
+#define DDR_PCFGWQOS0_1 0x01100C03
+#define DDR_PCFGWQOS1_1 0x01000200
+#define DDR_ADDRMAP1 0x00070707
+#define DDR_ADDRMAP2 0x00000000
+#define DDR_ADDRMAP3 0x1F000000
+#define DDR_ADDRMAP4 0x00001F1F
+#define DDR_ADDRMAP5 0x06060606
+#define DDR_ADDRMAP6 0x0F060606
+#define DDR_ADDRMAP9 0x00000000
+#define DDR_ADDRMAP10 0x00000000
+#define DDR_ADDRMAP11 0x00000000
+#define DDR_PGCR 0x01442E02
+#define DDR_PTR0 0x0022AA5B
+#define DDR_PTR1 0x04841104
+#define DDR_PTR2 0x042DA068
+#define DDR_ACIOCR 0x10400812
+#define DDR_DXCCR 0x00000C40
+#define DDR_DSGCR 0xF200001F
+#define DDR_DCR 0x0000000B
+#define DDR_DTPR0 0x38D488D0
+#define DDR_DTPR1 0x098B00D8
+#define DDR_DTPR2 0x10023600
+#define DDR_MR0 0x00000840
+#define DDR_MR1 0x00000000
+#define DDR_MR2 0x00000208
+#define DDR_MR3 0x00000000
+#define DDR_ODTCR 0x00010000
+#define DDR_ZQ0CR1 0x00000038
+#define DDR_DX0GCR 0x0000CE81
+#define DDR_DX0DLLCR 0x40000000
+#define DDR_DX0DQTR 0x55555000
+#define DDR_DX0DQSTR 0x3DB02000
+#define DDR_DX1GCR 0x0000CE81
+#define DDR_DX1DLLCR 0x40000000
+#define DDR_DX1DQTR 0x055A0055
+#define DDR_DX1DQSTR 0x3DB02000
+#define DDR_DX2GCR 0x0000C881
+#define DDR_DX2DLLCR 0x40000000
+#define DDR_DX2DQTR 0xFFFFFFFF
+#define DDR_DX2DQSTR 0x3DB02000
+#define DDR_DX3GCR 0x0000C881
+#define DDR_DX3DLLCR 0x40000000
+#define DDR_DX3DQTR 0xFFFFFFFF
+#define DDR_DX3DQSTR 0x3DB02000
diff --git a/arch/arm/dts/stm32mp157a-ugeast-512-mx-u-boot.dtsi b/arch/arm/dts/stm32mp157a-ugeast-512-mx-u-boot.dtsi
new file mode 100644
index 0000000..bc6a24a
--- /dev/null
+++ b/arch/arm/dts/stm32mp157a-ugeast-512-mx-u-boot.dtsi
@@ -0,0 +1,223 @@
+/* SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause*/
+/*
+ * Copyright (C) 2019, STMicroelectronics - All Rights Reserved
+ * Author: STM32CubeMX code generation for STMicroelectronics.
+ */
+
+#include <dt-bindings/clock/stm32mp1-clksrc.h>
+#include "stm32mp15-512-mx.h"
+
+#include "stm32mp157-u-boot.dtsi"
+#include "stm32mp15-ddr.dtsi"
+
+/* USER CODE BEGIN includes */
+/* USER CODE END includes */
+
+/ {
+
+	/* USER CODE BEGIN root */
+	/* USER CODE END root */
+
+clocks {
+    /* USER CODE BEGIN clocks */
+    /* USER CODE END clocks */
+
+    clk_hsi: clk-hsi {
+        /* USER CODE BEGIN clocks */
+        /* USER CODE END clocks */
+        u-boot,dm-pre-reloc;
+    };
+    clk_csi: clk-csi {
+        /* USER CODE BEGIN clocks */
+        /* USER CODE END clocks */
+        u-boot,dm-pre-reloc;
+    };
+    clk_lse: clk-lse {
+        /* USER CODE BEGIN clocks */
+        /* USER CODE END clocks */
+        st,drive=<LSEDRV_MEDIUM_HIGH>;
+        u-boot,dm-pre-reloc;
+    };
+    clk_hse: clk-hse {
+        /* USER CODE BEGIN clocks */
+        /* USER CODE END clocks */
+        u-boot,dm-pre-reloc;
+    };
+};
+
+}; /*root*/
+
+&gpioa {
+    compatible = "st,stm32-gpio";
+    u-boot,dm-pre-reloc;
+};
+&gpiob {
+    compatible = "st,stm32-gpio";
+    u-boot,dm-pre-reloc;
+};
+&gpioc {
+    compatible = "st,stm32-gpio";
+    u-boot,dm-pre-reloc;
+};
+&gpiod {
+    compatible = "st,stm32-gpio";
+    u-boot,dm-pre-reloc;
+};
+&gpioe {
+    compatible = "st,stm32-gpio";
+    u-boot,dm-pre-reloc;
+};
+&gpiof {
+    compatible = "st,stm32-gpio";
+    u-boot,dm-pre-reloc;
+};
+&gpiog {
+    compatible = "st,stm32-gpio";
+    u-boot,dm-pre-reloc;
+};
+&gpioh {
+    compatible = "st,stm32-gpio";
+    u-boot,dm-pre-reloc;
+};
+&gpioi {
+    compatible = "st,stm32-gpio";
+    u-boot,dm-pre-reloc;
+};
+&gpioj {
+    compatible = "st,stm32-gpio";
+    u-boot,dm-pre-reloc;
+};
+&gpiok {
+    compatible = "st,stm32-gpio";
+    u-boot,dm-pre-reloc;
+};
+&gpioz {
+    compatible = "st,stm32-gpio";
+    u-boot,dm-pre-reloc;
+};
+
+&rcc {
+    u-boot,dm-pre-reloc;
+    st,clksrc = <
+        CLK_MPU_PLL1P
+        CLK_AXI_PLL2P
+        CLK_MCU_HSI
+        CLK_PLL12_HSI
+        CLK_PLL3_HSI
+        CLK_PLL4_HSE
+        CLK_RTC_LSE
+        CLK_MCO1_DISABLED
+        CLK_MCO2_DISABLED
+    >;
+    st,clkdiv = <
+        1         /*MPU*/
+        1         /*AXI*/
+        0         /*MCU*/
+        0         /*APB1*/
+        0         /*APB2*/
+        0         /*APB3*/
+        1         /*APB4*/
+        1         /*APB5*/
+        0         /*RTC*/
+        0         /*MCO1*/
+        0         /*MCO2*/
+    >;
+    st,pkcs = <
+        CLK_CKPER_DISABLED
+        CLK_FMC_ACLK
+        CLK_ETH_PLL4P
+        CLK_SDMMC12_HSI
+        CLK_STGEN_HSI
+        CLK_USBPHY_HSE
+        CLK_SPI2S1_DISABLED
+        CLK_SPI2S23_DISABLED
+        CLK_SPI45_DISABLED
+        CLK_SPI6_DISABLED
+        CLK_I2C46_CSI
+        CLK_SDMMC3_DISABLED
+        CLK_USBO_PLL4R
+        CLK_ADC_DISABLED
+        CLK_CEC_DISABLED
+        CLK_I2C12_PCLK1
+        CLK_I2C35_DISABLED
+        CLK_UART1_PCLK5
+        CLK_UART24_HSE
+        CLK_UART35_PCLK1
+        CLK_UART6_PCLK2
+        CLK_UART78_DISABLED
+        CLK_SPDIF_PLL4P
+        CLK_FDCAN_HSE
+        CLK_SAI1_DISABLED
+        CLK_SAI2_SPDIF
+        CLK_SAI3_DISABLED
+        CLK_SAI4_DISABLED
+        CLK_LPTIM1_DISABLED
+        CLK_LPTIM23_DISABLED
+        CLK_LPTIM45_DISABLED
+    >;
+    pll1:st,pll@0 {
+        cfg = < 3 39 0 1 1 1>;
+        u-boot,dm-pre-reloc;
+    };
+    pll2:st,pll@1 {
+        cfg = < 3 32 1 0 0 7>;
+        u-boot,dm-pre-reloc;
+    };
+    pll4:st,pll@3 {
+        cfg = < 1 49 11 10 1 7>;
+        u-boot,dm-pre-reloc;
+    };
+};
+
+&fmc{
+    u-boot,dm-pre-reloc;
+
+    /* USER CODE BEGIN fmc */
+    /* USER CODE END fmc */
+};
+
+&rcc{
+    u-boot,dm-pre-reloc;
+
+    /* USER CODE BEGIN rcc */
+    /* USER CODE END rcc */
+};
+
+&sdmmc1{
+    u-boot,dm-pre-reloc;
+
+    /* USER CODE BEGIN sdmmc1 */
+    /* USER CODE END sdmmc1 */
+};
+
+&uart4{
+    u-boot,dm-pre-reloc;
+
+    /* USER CODE BEGIN uart4 */
+    /* USER CODE END uart4 */
+};
+
+&usart1{
+    u-boot,dm-pre-reloc;
+
+    /* USER CODE BEGIN usart1 */
+    /* USER CODE END usart1 */
+};
+
+&usart3{
+    u-boot,dm-pre-reloc;
+
+    /* USER CODE BEGIN usart3 */
+    /* USER CODE END usart3 */
+};
+
+&usart6{
+    u-boot,dm-pre-reloc;
+
+    /* USER CODE BEGIN usart6 */
+    /* USER CODE END usart6 */
+};
+
+/* USER CODE BEGIN addons */
+/* USER CODE END addons */
+
diff --git a/arch/arm/dts/stm32mp157a-ugeast-512-mx.dts b/arch/arm/dts/stm32mp157a-ugeast-512-mx.dts
new file mode 100644
index 0000000..8f62533
--- /dev/null
+++ b/arch/arm/dts/stm32mp157a-ugeast-512-mx.dts
@@ -0,0 +1,791 @@
+/* SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause) */
+/*
+ * Copyright (C) STMicroelectronics 2019 - All Rights Reserved
+ * Author: STM32CubeMX code generation for STMicroelectronics.
+ */
+
+/dts-v1/;
+#include "stm32mp15-512-mx.h"
+#include "stm32mp157c.dtsi"
+#include "stm32mp157c-m4-srm.dtsi"
+#include "stm32mp157cac-pinctrl.dtsi"
+
+/* USER CODE BEGIN includes */
+/* USER CODE END includes */
+
+/ {
+	model = "STMicroelectronics custom STM32CubeMX board";
+	compatible = "st,stm32mp157a-ugeast-512-mx", "st,stm32mp157a-ugeast-mx", "st,stm32mp157";
+
+    memory@c0000000 {
+        reg = <0xc0000000 0x20000000>;
+
+        /* USER CODE BEGIN memory */
+        /* USER CODE END memory */
+    };
+
+    reserved-memory {
+        #address-cells = <1>;
+        #size-cells = <1>;
+        ranges;
+
+        /* USER CODE BEGIN reserved-memory */
+        /* USER CODE END reserved-memory */
+
+        gpu_reserved: gpu@ce000000 {
+            reg = <0xce000000 0x2000000>;
+            no-map;
+        };
+    };
+
+	/* USER CODE BEGIN root */
+    aliases {
+		ethernet0 = &ethernet0;
+		serial0 = &uart4;
+	};
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+	/* USER CODE END root */
+
+    clocks {
+        /* USER CODE BEGIN clocks */
+        /* USER CODE END clocks */
+
+        clk_hsi: clk-hsi {
+            clock-frequency = <64000000>;
+        };
+        clk_csi: clk-csi {
+            clock-frequency = <4000000>;
+        };
+        clk_lse: clk-lse {
+            clock-frequency = <32768>;
+        };
+        clk_hse: clk-hse {
+            clock-frequency = <24000000>;
+        };
+    };
+
+	vdd_usb: regulator-vdd_usb {
+		compatible = "regulator-fixed";
+		regulator-name = "vdd_usb";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+	};
+	
+	vbus_otg: regulator-vbus_otg {
+		compatible = "regulator-fixed";
+		regulator-name = "vbus_otg";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+        regulator-always-on;
+	};
+
+}; /*root*/
+
+&pinctrl {
+    u-boot,dm-pre-reloc;
+    eth1_pins_mx: eth1_mx-0 {
+				pins {
+					pinmux =  <STM32_PINMUX('A', 1, AF0)>, /* ETH_CLK */
+						 <STM32_PINMUX('A', 2, AF11)>, /* ETH_MDIO */
+						 <STM32_PINMUX('C', 1, AF11)>, /* ETH_MDC */
+						 <STM32_PINMUX('A', 7, AF11)>, /* ETH_RX_DV */
+						 <STM32_PINMUX('B', 11, AF11)>, /* ETH_TX_EN */
+						 <STM32_PINMUX('C', 4, AF11)>, /* ETH_RX_D0 */
+						 <STM32_PINMUX('C', 5, AF11)>, /* ETH_RX_D1 */
+						 <STM32_PINMUX('G', 13, AF11)>, /* ETH_TX_D0 */
+						 <STM32_PINMUX('G', 14, AF11)>; /* ETH_TX_D1 */
+					bias-disable;
+					drive-push-pull;
+					slew-rate = <3>;
+				};
+    };
+
+    eth_res: eth_res-0 {
+        pins {
+            pinmux = <STM32_PINMUX('A', 13, GPIO)>;
+            bias-pull-up;
+            drive-push-pull;
+            output-high;
+            slew-rate = <0>;
+        };
+    };
+
+    fdcan1_pins_mx: fdcan1_mx-0 {
+        pins1 {
+            pinmux = <STM32_PINMUX('I', 9, AF9)>; /* FDCAN1_RX */
+            bias-disable;
+        };
+        pins2 {
+            pinmux = <STM32_PINMUX('B', 9, AF9)>; /* FDCAN1_TX */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <0>;
+        };
+    };
+    fmc_pins_mx: fmc_mx-0 {
+        u-boot,dm-pre-reloc;
+        pins1 {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('D', 0, AF12)>, /* FMC_D2 */
+                     <STM32_PINMUX('D', 1, AF12)>, /* FMC_D3 */
+                     <STM32_PINMUX('D', 4, AF12)>, /* FMC_NOE */
+                     <STM32_PINMUX('D', 5, AF12)>, /* FMC_NWE */
+                     <STM32_PINMUX('D', 11, AF12)>, /* FMC_CLE */
+                     <STM32_PINMUX('D', 12, AF12)>, /* FMC_ALE */
+                     <STM32_PINMUX('D', 14, AF12)>, /* FMC_D0 */
+                     <STM32_PINMUX('D', 15, AF12)>, /* FMC_D1 */
+                     <STM32_PINMUX('E', 7, AF12)>, /* FMC_D4 */
+                     <STM32_PINMUX('E', 8, AF12)>, /* FMC_D5 */
+                     <STM32_PINMUX('E', 9, AF12)>, /* FMC_D6 */
+                     <STM32_PINMUX('E', 10, AF12)>, /* FMC_D7 */
+                     <STM32_PINMUX('G', 9, AF12)>; /* FMC_NCE */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <1>;
+        };
+        pins2 {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('D', 6, AF12)>; /* FMC_NWAIT */
+            bias-disable;
+        };
+    };
+    i2c2_pins_mx: i2c2_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('H', 4, AF4)>, /* I2C2_SCL */
+                     <STM32_PINMUX('H', 5, AF4)>; /* I2C2_SDA */
+            bias-disable;
+            drive-open-drain;
+            slew-rate = <0>;
+        };
+    };
+    i2c4_pins_mx: i2c4_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('H', 11, AF4)>, /* I2C4_SCL */
+                     <STM32_PINMUX('H', 12, AF4)>; /* I2C4_SDA */
+            bias-disable;
+            drive-open-drain;
+            slew-rate = <0>;
+        };
+    };
+    ltdc_pins_mx: ltdc_mx-0 {
+        pins1 {
+            pinmux = <STM32_PINMUX('A', 3, AF9)>, /* LTDC_B2 */
+                     <STM32_PINMUX('A', 4, AF14)>, /* LTDC_VSYNC */
+                     <STM32_PINMUX('A', 8, AF14)>, /* LTDC_R6 */
+                     <STM32_PINMUX('A', 9, AF14)>, /* LTDC_R5 */
+                     <STM32_PINMUX('A', 15, AF14)>, /* LTDC_R1 */
+                     <STM32_PINMUX('D', 10, AF14)>, /* LTDC_B3 */
+                     <STM32_PINMUX('E', 4, AF14)>, /* LTDC_B0 */
+                     <STM32_PINMUX('E', 5, AF14)>, /* LTDC_G0 */
+                     <STM32_PINMUX('E', 6, AF14)>, /* LTDC_G1 */
+                     <STM32_PINMUX('F', 10, AF14)>, /* LTDC_DE */
+                     <STM32_PINMUX('G', 6, AF14)>, /* LTDC_R7 */
+                     <STM32_PINMUX('G', 12, AF14)>, /* LTDC_B1 */
+                     <STM32_PINMUX('H', 2, AF14)>, /* LTDC_R0 */
+                     <STM32_PINMUX('H', 8, AF14)>, /* LTDC_R2 */
+                     <STM32_PINMUX('H', 9, AF14)>, /* LTDC_R3 */
+                     <STM32_PINMUX('H', 10, AF14)>, /* LTDC_R4 */
+                     <STM32_PINMUX('H', 13, AF14)>, /* LTDC_G2 */
+                     <STM32_PINMUX('H', 14, AF14)>, /* LTDC_G3 */
+                     <STM32_PINMUX('H', 15, AF14)>, /* LTDC_G4 */
+                     <STM32_PINMUX('I', 0, AF14)>, /* LTDC_G5 */
+                     <STM32_PINMUX('I', 1, AF14)>, /* LTDC_G6 */
+                     <STM32_PINMUX('I', 2, AF14)>, /* LTDC_G7 */
+                     <STM32_PINMUX('I', 4, AF14)>, /* LTDC_B4 */
+                     <STM32_PINMUX('I', 5, AF14)>, /* LTDC_B5 */
+                     <STM32_PINMUX('I', 6, AF14)>, /* LTDC_B6 */
+                     <STM32_PINMUX('I', 7, AF14)>, /* LTDC_B7 */
+                     <STM32_PINMUX('I', 10, AF14)>; /* LTDC_HSYNC */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <0>;
+        };
+        pins2 {
+            pinmux = <STM32_PINMUX('G', 7, AF14)>; /* LTDC_CLK */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <1>;
+        };
+    };
+    rtc_pins_mx: rtc_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('I', 8, ANALOG)>; /* RTC_LSCO */
+        };
+    };
+    sai2b_pins_mx: sai2b_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('E', 11, AF10)>, /* SAI2_SD_B */
+                     <STM32_PINMUX('E', 12, AF10)>, /* SAI2_SCK_B */
+                     <STM32_PINMUX('E', 13, AF10)>, /* SAI2_FS_B */
+                     <STM32_PINMUX('E', 14, AF10)>; /* SAI2_MCLK_B */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <0>;
+        };
+    };
+    sdmmc1_pins_mx: sdmmc1_mx-0 {
+        u-boot,dm-pre-reloc;
+        pins {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('C', 8, AF12)>, /* SDMMC1_D0 */
+                     <STM32_PINMUX('C', 9, AF12)>, /* SDMMC1_D1 */
+                     <STM32_PINMUX('C', 10, AF12)>, /* SDMMC1_D2 */
+                     <STM32_PINMUX('C', 11, AF12)>, /* SDMMC1_D3 */
+                     <STM32_PINMUX('C', 12, AF12)>, /* SDMMC1_CK */
+                     <STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
+            bias-pull-up;
+            drive-push-pull;
+            slew-rate = <3>;
+        };
+    };
+    
+    uart4_pins_mx: uart4_mx-0 {
+        u-boot,dm-pre-reloc;
+        pins1 {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('G', 11, AF6)>; /* UART4_TX */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <0>;
+        };
+        pins2 {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
+            bias-disable;
+        };
+    };
+    usart1_pins_mx: usart1_mx-0 {
+        u-boot,dm-pre-reloc;
+        pins1 {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('B', 15, AF4)>; /* USART1_RX */
+            bias-disable;
+        };
+        pins2 {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('B', 14, AF4)>; /* USART1_TX */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <0>;
+        };
+    };
+    usart3_pins_mx: usart3_mx-0 {
+        u-boot,dm-pre-reloc;
+        pins1 {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('B', 12, AF8)>; /* USART3_RX */
+            bias-disable;
+        };
+        pins2 {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('B', 10, AF7)>; /* USART3_TX */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <0>;
+        };
+    };
+    usart6_pins_mx: usart6_mx-0 {
+        u-boot,dm-pre-reloc;
+        pins1 {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('C', 7, AF7)>; /* USART6_RX */
+            bias-disable;
+        };
+        pins2 {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('C', 6, AF7)>; /* USART6_TX */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <0>;
+        };
+    };
+    usb_otg_hs_pins_mx: usb_otg_hs_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('A', 10, ANALOG)>; /* USB_OTG_HS_ID */
+        };
+    };
+    eth1_sleep_pins_mx: eth1_sleep_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('A', 1, ANALOG)>, /* ETH1_CLK */
+                     <STM32_PINMUX('A', 2, ANALOG)>, /* ETH1_MDIO */
+                     <STM32_PINMUX('A', 7, ANALOG)>, /* ETH1_CRS_DV */
+                     <STM32_PINMUX('B', 11, ANALOG)>, /* ETH1_TX_EN */
+                     <STM32_PINMUX('C', 1, ANALOG)>, /* ETH1_MDC */
+                     <STM32_PINMUX('C', 4, ANALOG)>, /* ETH1_RXD0 */
+                     <STM32_PINMUX('C', 5, ANALOG)>, /* ETH1_RXD1 */
+                     <STM32_PINMUX('G', 13, ANALOG)>, /* ETH1_TXD0 */
+                     <STM32_PINMUX('G', 14, ANALOG)>; /* ETH1_TXD1 */
+        };
+    };
+    fdcan1_sleep_pins_mx: fdcan1_sleep_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('B', 9, ANALOG)>, /* FDCAN1_TX */
+                     <STM32_PINMUX('I', 9, ANALOG)>; /* FDCAN1_RX */
+        };
+    };
+    
+    fmc_pins_a: fmc-0 {
+        pins1 {
+            pinmux = <STM32_PINMUX('D', 4, AF12)>, /* FMC_NOE */
+                    <STM32_PINMUX('D', 5, AF12)>, /* FMC_NWE */
+                    <STM32_PINMUX('D', 11, AF12)>, /* FMC_A16_FMC_CLE */
+                    <STM32_PINMUX('D', 12, AF12)>, /* FMC_A17_FMC_ALE */
+                    <STM32_PINMUX('D', 14, AF12)>, /* FMC_D0 */
+                    <STM32_PINMUX('D', 15, AF12)>, /* FMC_D1 */
+                    <STM32_PINMUX('D', 0, AF12)>, /* FMC_D2 */
+                    <STM32_PINMUX('D', 1, AF12)>, /* FMC_D3 */
+                    <STM32_PINMUX('E', 7, AF12)>, /* FMC_D4 */
+                    <STM32_PINMUX('E', 8, AF12)>, /* FMC_D5 */
+                    <STM32_PINMUX('E', 9, AF12)>, /* FMC_D6 */
+                    <STM32_PINMUX('E', 10, AF12)>, /* FMC_D7 */
+                    <STM32_PINMUX('G', 9, AF12)>; /* FMC_NE2_FMC_NCE */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <1>;
+        };
+        pins2 {
+            pinmux = <STM32_PINMUX('D', 6, AF12)>; /* FMC_NWAIT */
+            bias-pull-up;
+        };
+    };
+    
+    fmc_sleep_pins_mx: fmc_sleep_mx-0 {
+        u-boot,dm-pre-reloc;
+        pins {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('D', 0, ANALOG)>, /* FMC_D2 */
+                     <STM32_PINMUX('D', 1, ANALOG)>, /* FMC_D3 */
+                     <STM32_PINMUX('D', 4, ANALOG)>, /* FMC_NOE */
+                     <STM32_PINMUX('D', 5, ANALOG)>, /* FMC_NWE */
+                     <STM32_PINMUX('D', 6, ANALOG)>, /* FMC_NWAIT */
+                     <STM32_PINMUX('D', 11, ANALOG)>, /* FMC_CLE */
+                     <STM32_PINMUX('D', 12, ANALOG)>, /* FMC_ALE */
+                     <STM32_PINMUX('D', 14, ANALOG)>, /* FMC_D0 */
+                     <STM32_PINMUX('D', 15, ANALOG)>, /* FMC_D1 */
+                     <STM32_PINMUX('E', 7, ANALOG)>, /* FMC_D4 */
+                     <STM32_PINMUX('E', 8, ANALOG)>, /* FMC_D5 */
+                     <STM32_PINMUX('E', 9, ANALOG)>, /* FMC_D6 */
+                     <STM32_PINMUX('E', 10, ANALOG)>, /* FMC_D7 */
+                     <STM32_PINMUX('G', 9, ANALOG)>; /* FMC_NCE */
+        };
+    };
+    i2c2_sleep_pins_mx: i2c2_sleep_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('H', 4, ANALOG)>, /* I2C2_SCL */
+                     <STM32_PINMUX('H', 5, ANALOG)>; /* I2C2_SDA */
+        };
+    };
+    i2c4_sleep_pins_mx: i2c4_sleep_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('H', 11, ANALOG)>, /* I2C4_SCL */
+                     <STM32_PINMUX('H', 12, ANALOG)>; /* I2C4_SDA */
+        };
+    };
+    ltdc_sleep_pins_mx: ltdc_sleep_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('A', 3, ANALOG)>, /* LTDC_B2 */
+                     <STM32_PINMUX('A', 4, ANALOG)>, /* LTDC_VSYNC */
+                     <STM32_PINMUX('A', 8, ANALOG)>, /* LTDC_R6 */
+                     <STM32_PINMUX('A', 9, ANALOG)>, /* LTDC_R5 */
+                     <STM32_PINMUX('A', 15, ANALOG)>, /* LTDC_R1 */
+                     <STM32_PINMUX('D', 10, ANALOG)>, /* LTDC_B3 */
+                     <STM32_PINMUX('E', 4, ANALOG)>, /* LTDC_B0 */
+                     <STM32_PINMUX('E', 5, ANALOG)>, /* LTDC_G0 */
+                     <STM32_PINMUX('E', 6, ANALOG)>, /* LTDC_G1 */
+                     <STM32_PINMUX('F', 10, ANALOG)>, /* LTDC_DE */
+                     <STM32_PINMUX('G', 6, ANALOG)>, /* LTDC_R7 */
+                     <STM32_PINMUX('G', 7, ANALOG)>, /* LTDC_CLK */
+                     <STM32_PINMUX('G', 12, ANALOG)>, /* LTDC_B1 */
+                     <STM32_PINMUX('H', 2, ANALOG)>, /* LTDC_R0 */
+                     <STM32_PINMUX('H', 8, ANALOG)>, /* LTDC_R2 */
+                     <STM32_PINMUX('H', 9, ANALOG)>, /* LTDC_R3 */
+                     <STM32_PINMUX('H', 10, ANALOG)>, /* LTDC_R4 */
+                     <STM32_PINMUX('H', 13, ANALOG)>, /* LTDC_G2 */
+                     <STM32_PINMUX('H', 14, ANALOG)>, /* LTDC_G3 */
+                     <STM32_PINMUX('H', 15, ANALOG)>, /* LTDC_G4 */
+                     <STM32_PINMUX('I', 0, ANALOG)>, /* LTDC_G5 */
+                     <STM32_PINMUX('I', 1, ANALOG)>, /* LTDC_G6 */
+                     <STM32_PINMUX('I', 2, ANALOG)>, /* LTDC_G7 */
+                     <STM32_PINMUX('I', 4, ANALOG)>, /* LTDC_B4 */
+                     <STM32_PINMUX('I', 5, ANALOG)>, /* LTDC_B5 */
+                     <STM32_PINMUX('I', 6, ANALOG)>, /* LTDC_B6 */
+                     <STM32_PINMUX('I', 7, ANALOG)>, /* LTDC_B7 */
+                     <STM32_PINMUX('I', 10, ANALOG)>; /* LTDC_HSYNC */
+        };
+    };
+    rtc_sleep_pins_mx: rtc_sleep_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('I', 8, ANALOG)>; /* RTC_LSCO */
+        };
+    };
+    sai2b_sleep_pins_mx: sai2b_sleep_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('E', 11, ANALOG)>, /* SAI2_SD_B */
+                     <STM32_PINMUX('E', 12, ANALOG)>, /* SAI2_SCK_B */
+                     <STM32_PINMUX('E', 13, ANALOG)>, /* SAI2_FS_B */
+                     <STM32_PINMUX('E', 14, ANALOG)>; /* SAI2_MCLK_B */
+        };
+    };
+    sdmmc1_sleep_pins_mx: sdmmc1_sleep_mx-0 {
+        u-boot,dm-pre-reloc;
+        pins {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('C', 8, ANALOG)>, /* SDMMC1_D0 */
+                     <STM32_PINMUX('C', 9, ANALOG)>, /* SDMMC1_D1 */
+                     <STM32_PINMUX('C', 10, ANALOG)>, /* SDMMC1_D2 */
+                     <STM32_PINMUX('C', 11, ANALOG)>, /* SDMMC1_D3 */
+                     <STM32_PINMUX('C', 12, ANALOG)>, /* SDMMC1_CK */
+                     <STM32_PINMUX('D', 2, ANALOG)>; /* SDMMC1_CMD */
+        };
+    };
+
+    uart4_sleep_pins_mx: uart4_sleep_mx-0 {
+        u-boot,dm-pre-reloc;
+        pins {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('B', 2, ANALOG)>, /* UART4_RX */
+                     <STM32_PINMUX('G', 11, ANALOG)>; /* UART4_TX */
+        };
+    };
+    usart1_sleep_pins_mx: usart1_sleep_mx-0 {
+        u-boot,dm-pre-reloc;
+        pins {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('B', 14, ANALOG)>, /* USART1_TX */
+                     <STM32_PINMUX('B', 15, ANALOG)>; /* USART1_RX */
+        };
+    };
+    usart3_sleep_pins_mx: usart3_sleep_mx-0 {
+        u-boot,dm-pre-reloc;
+        pins {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('B', 10, ANALOG)>, /* USART3_TX */
+                     <STM32_PINMUX('B', 12, ANALOG)>; /* USART3_RX */
+        };
+    };
+    usart6_sleep_pins_mx: usart6_sleep_mx-0 {
+        u-boot,dm-pre-reloc;
+        pins {
+            u-boot,dm-pre-reloc;
+            pinmux = <STM32_PINMUX('C', 6, ANALOG)>, /* USART6_TX */
+                     <STM32_PINMUX('C', 7, ANALOG)>; /* USART6_RX */
+        };
+    };
+    usb_otg_hs_sleep_pins_mx: usb_otg_hs_sleep_mx-0 {
+        pins {
+            pinmux = <STM32_PINMUX('A', 10, ANALOG)>; /* USB_OTG_HS_ID */
+        };
+    };
+};
+
+&m4_rproc{
+    recovery;
+    status = "okay";
+
+    /* USER CODE BEGIN m4_rproc */
+    /* USER CODE END m4_rproc */
+};
+
+&bsec{
+    status = "okay";
+
+    /* USER CODE BEGIN bsec */
+    /* USER CODE END bsec */
+};
+
+&ethernet0{
+    pinctrl-names = "default", "sleep";
+    pinctrl-0 = <&eth1_pins_mx>;
+    pinctrl-1 = <&eth1_sleep_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN ethernet0 */
+    /* USER CODE END ethernet0 */
+};
+
+&fmc{
+    u-boot,dm-pre-reloc;
+    pinctrl-names = "default", "sleep";
+    pinctrl-0 = <&fmc_pins_mx>;
+    pinctrl-1 = <&fmc_sleep_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN fmc */
+    /* USER CODE END fmc */
+};
+
+&gpu{
+    status = "okay";
+
+    /* USER CODE BEGIN gpu */
+    /* USER CODE END gpu */
+};
+
+&i2c2{
+    pinctrl-names = "default", "sleep";
+    pinctrl-0 = <&i2c2_pins_mx>;
+    pinctrl-1 = <&i2c2_sleep_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN i2c2 */
+    /* USER CODE END i2c2 */
+};
+
+&i2c4{
+    pinctrl-names = "default", "sleep";
+    pinctrl-0 = <&i2c4_pins_mx>;
+    pinctrl-1 = <&i2c4_sleep_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN i2c4 */
+    /* USER CODE END i2c4 */
+};
+
+&iwdg2{
+    status = "okay";
+
+    /* USER CODE BEGIN iwdg2 */
+    /* USER CODE END iwdg2 */
+};
+
+&ltdc{
+    pinctrl-names = "default", "sleep";
+    pinctrl-0 = <&ltdc_pins_mx>;
+    pinctrl-1 = <&ltdc_sleep_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN ltdc */
+    /* USER CODE END ltdc */
+};
+
+&m_can1{
+    pinctrl-names = "default", "sleep";
+    pinctrl-0 = <&fdcan1_pins_mx>;
+    pinctrl-1 = <&fdcan1_sleep_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN m_can1 */
+    /* USER CODE END m_can1 */
+};
+
+&rcc{
+    u-boot,dm-pre-reloc;
+    status = "okay";
+
+    /* USER CODE BEGIN rcc */
+    /* USER CODE END rcc */
+};
+
+&rtc{
+    pinctrl-names = "default", "sleep";
+    pinctrl-0 = <&rtc_pins_mx>;
+    pinctrl-1 = <&rtc_sleep_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN rtc */
+    /* USER CODE END rtc */
+};
+
+&sai2{
+    status = "okay";
+
+    /* USER CODE BEGIN sai2 */
+    /* USER CODE END sai2 */
+
+    sai2b:audio-controller@4400b024{
+        pinctrl-names = "default", "sleep";
+        pinctrl-0 = <&sai2b_pins_mx>;
+        pinctrl-1 = <&sai2b_sleep_pins_mx>;
+        status = "okay";
+
+        /* USER CODE BEGIN sai2b */
+        /* USER CODE END sai2b */
+    };
+};
+
+&sdmmc1{
+    u-boot,dm-pre-reloc;
+    pinctrl-names = "default", "sleep";
+    pinctrl-0 = <&sdmmc1_pins_mx>;
+    pinctrl-1 = <&sdmmc1_sleep_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN sdmmc1 */
+    no-removable;
+    st,dirpol;
+    st,negedge;
+    bus-width=<4>;
+    /* USER CODE END sdmmc1 */
+};
+
+&uart4{
+    u-boot,dm-pre-reloc;
+    pinctrl-names = "default", "sleep";
+    pinctrl-0 = <&uart4_pins_mx>;
+    pinctrl-1 = <&uart4_sleep_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN uart4 */
+    /* USER CODE END uart4 */
+};
+
+&usart1{
+    u-boot,dm-pre-reloc;
+    pinctrl-names = "default", "sleep";
+    pinctrl-0 = <&usart1_pins_mx>;
+    pinctrl-1 = <&usart1_sleep_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN usart1 */
+    /* USER CODE END usart1 */
+};
+
+&usart3{
+    u-boot,dm-pre-reloc;
+    pinctrl-names = "default", "sleep";
+    pinctrl-0 = <&usart3_pins_mx>;
+    pinctrl-1 = <&usart3_sleep_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN usart3 */
+    /* USER CODE END usart3 */
+};
+
+&usart6{
+    u-boot,dm-pre-reloc;
+    pinctrl-names = "default", "sleep";
+    pinctrl-0 = <&usart6_pins_mx>;
+    pinctrl-1 = <&usart6_sleep_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN usart6 */
+    /* USER CODE END usart6 */
+};
+
+&usbh_ehci{
+    status = "okay";
+
+    /* USER CODE BEGIN usbh_ehci */
+   	phy-names = "usb";
+	phys = <&usbphyc_port0>;
+
+    /* USER CODE END usbh_ehci */
+};
+
+&usbh_ohci{
+    status = "okay";
+
+    /* USER CODE BEGIN usbh_ohci */
+    /* USER CODE END usbh_ohci */
+};
+
+&usbotg_hs{
+    pinctrl-names = "default", "sleep";
+    pinctrl-0 = <&usb_otg_hs_pins_mx>;
+    pinctrl-1 = <&usb_otg_hs_sleep_pins_mx>;
+    status = "okay";
+
+    /* USER CODE BEGIN usbotg_hs */
+    /* USER CODE END usbotg_hs */
+};
+
+&usbotg_hs {
+	vbus-supply = <&vbus_otg>;
+};
+
+&usbphyc {
+	vdd3v3-supply = <&vdd_usb>;
+};
+&usbphyc{
+    status = "okay";
+
+    /* USER CODE BEGIN usbphyc */
+    /* USER CODE END usbphyc */
+};
+
+&usbphyc_port0{
+    status = "okay";
+
+    /* USER CODE BEGIN usbphyc_port0 */
+    /* USER CODE END usbphyc_port0 */
+};
+
+&usbphyc_port1{
+    status = "okay";
+
+    /* USER CODE BEGIN usbphyc_port1 */
+    /* USER CODE END usbphyc_port1 */
+};
+
+/* USER CODE BEGIN addons */
+
+&fmc {
+	pinctrl-names = "default";
+	pinctrl-0 = <&fmc_pins_a>;
+	status = "okay";
+	#address-cells = <1>;
+	#size-cells = <0>;
+
+	nand: nand@0 {
+		reg = <0>;
+		nand-on-flash-bbt;
+		#address-cells = <1>;
+		#size-cells = <1>;
+		
+        partition@0 {
+            label = "nand-boot";
+            reg = <0x00000000 0x01400000>;
+        };
+
+        partition@1400000 {
+            label = "nand-fs";
+            reg = <0x01400000 0x1e000000>;
+        };
+	};
+};
+
+&ethernet0 {
+    pinctrl-names = "default";
+    pinctrl-0 = <&eth1_pins_mx>;
+	phy-mode = "rmii";
+	max-speed = <100>;
+	phy-handle = <&phy0>;
+	snps,ps-speed = <100>;
+    st,eth_ref_clk_sel;
+	status = "okay";
+
+    clock-names = "stmmaceth",
+                "mac-clk-tx",
+                "mac-clk-rx",
+                "ethstp",
+                "syscfg-clk",
+                "eth-ck";
+
+    clocks = <&rcc ETHMAC>,
+            <&rcc ETHTX>,
+            <&rcc ETHRX>,
+            <&rcc ETHSTP>,
+            <&rcc SYSCFG>,
+            <&rcc ETHCK>;
+	
+    mdio0 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		compatible = "snps,dwmac-mdio";
+		snps,reset-gpio = <&gpioa 13 0>;
+		snps,reset-delays-us = <25>;
+		snps,reset-active-low;
+
+		phy0: ethernet-phy-0 {
+			reg = <0>;
+		};
+	};
+};
+
+
+/* USER CODE END addons */
+
diff --git a/arch/arm/dts/stm32mp157a-ugeast-mx.dts b/arch/arm/dts/stm32mp157a-ugeast-mx.dts
index 8089083..1b34b54 100644
--- a/arch/arm/dts/stm32mp157a-ugeast-mx.dts
+++ b/arch/arm/dts/stm32mp157a-ugeast-mx.dts
@@ -5,6 +5,7 @@
  */
 
 /dts-v1/;
+#include "stm32mp15-mx.h"
 #include "stm32mp157c.dtsi"
 #include "stm32mp157c-m4-srm.dtsi"
 #include "stm32mp157cac-pinctrl.dtsi"
diff --git a/configs/stm32mp15_ugeast_512_trusted_defconfig b/configs/stm32mp15_ugeast_512_trusted_defconfig
new file mode 100644
index 0000000..e80785e
--- /dev/null
+++ b/configs/stm32mp15_ugeast_512_trusted_defconfig
@@ -0,0 +1,104 @@
+CONFIG_ARM=y
+CONFIG_ARCH_STM32MP=y
+CONFIG_SYS_MALLOC_F_LEN=0x3000
+CONFIG_TARGET_UGEA_STM32MP1=y
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_FIT=y
+CONFIG_SYS_PROMPT="STM32MP-uGea> "
+# CONFIG_CMD_BOOTD is not set
+# CONFIG_CMD_ELF is not set
+# CONFIG_CMD_IMI is not set
+# CONFIG_CMD_XIMG is not set
+# CONFIG_CMD_EXPORTENV is not set
+# CONFIG_CMD_IMPORTENV is not set
+CONFIG_CMD_MEMINFO=y
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_ADC=y
+CONFIG_CMD_CLK=y
+CONFIG_CMD_DFU=y
+CONFIG_CMD_FUSE=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_REMOTEPROC=y
+CONFIG_CMD_SF=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+CONFIG_CMD_BMP=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_TIME=y
+CONFIG_CMD_TIMER=y
+CONFIG_CMD_PMIC=y
+CONFIG_CMD_REGULATOR=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_CMD_MTDPARTS=y
+CONFIG_CMD_UBI=y
+CONFIG_DEFAULT_DEVICE_TREE="stm32mp157a-ugeast-512-mx"
+CONFIG_STM32_ADC=y
+CONFIG_USB_FUNCTION_FASTBOOT=y
+CONFIG_FASTBOOT_BUF_ADDR=0xC0000000
+CONFIG_FASTBOOT_BUF_SIZE=0x02000000
+CONFIG_FASTBOOT_USB_DEV=1
+CONFIG_FASTBOOT_FLASH=y
+CONFIG_FASTBOOT_FLASH_MMC_DEV=0
+CONFIG_DM_HWSPINLOCK=y
+CONFIG_HWSPINLOCK_STM32=y
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_STM32F7=y
+CONFIG_LED=y
+CONFIG_LED_GPIO=y
+CONFIG_DM_MAILBOX=y
+CONFIG_STM32_IPCC=y
+CONFIG_DM_MMC=y
+CONFIG_STM32_SDMMC2=y
+CONFIG_MTD=y
+CONFIG_NAND=y
+CONFIG_NAND_STM32_FMC2=y
+CONFIG_DM_SPI_FLASH=y
+CONFIG_SPI_FLASH=y
+CONFIG_SPI_FLASH_BAR=y
+CONFIG_SPI_FLASH_MACRONIX=y
+CONFIG_SPI_FLASH_SPANSION=y
+CONFIG_SPI_FLASH_STMICRO=y
+CONFIG_SPI_FLASH_WINBOND=y
+# CONFIG_SPI_FLASH_USE_4K_SECTORS is not set
+CONFIG_SPI_FLASH_MTD=y
+CONFIG_PHY_FIXED=y
+CONFIG_DM_ETH=y
+CONFIG_DWC_ETH_QOS=y
+CONFIG_PHY=y
+CONFIG_PHY_STM32_USBPHYC=y
+CONFIG_PINCONF=y
+CONFIG_PINCTRL_STMFX=y
+CONFIG_DM_PMIC=y
+CONFIG_PMIC_STPMIC1=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_DM_REGULATOR_GPIO=y
+CONFIG_DM_REGULATOR_STM32_VREFBUF=y
+CONFIG_DM_REGULATOR_STPMIC1=y
+CONFIG_REMOTEPROC_STM32_COPRO=y
+CONFIG_SERIAL_RX_BUFFER=y
+CONFIG_SPI=y
+CONFIG_DM_SPI=y
+CONFIG_STM32_QSPI=y
+CONFIG_USB=y
+CONFIG_DM_USB=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_EHCI_GENERIC=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_MANUFACTURER="STMicroelectronics"
+CONFIG_USB_GADGET_VENDOR_NUM=0x0483
+CONFIG_USB_GADGET_PRODUCT_NUM=0x5720
+CONFIG_USB_GADGET_DWC2_OTG=y
+CONFIG_DM_VIDEO=y
+CONFIG_BACKLIGHT_GPIO=y
+CONFIG_VIDEO_LCD_ORISETECH_OTM8009A=y
+CONFIG_VIDEO_LCD_RAYDIUM_RM68200=y
+CONFIG_VIDEO_STM32=y
+CONFIG_VIDEO_STM32_DSI=y
+CONFIG_VIDEO_STM32_MAX_XRES=1280
+CONFIG_VIDEO_STM32_MAX_YRES=800
+CONFIG_STM32MP_WATCHDOG=y
+CONFIG_FDT_FIXUP_PARTITIONS=y
+# CONFIG_EFI_LOADER is not set
-- 
2.20.1

