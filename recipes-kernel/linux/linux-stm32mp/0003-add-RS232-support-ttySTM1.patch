From 579d6d0bbf0777c93eba5069cd6bdd9790f4456f Mon Sep 17 00:00:00 2001
From: Matteo Lisi <matteo.lisi@engicam.com>
Date: Tue, 10 Aug 2021 11:53:05 +0200
Subject: [PATCH] add RS232 support ttySTM1

---
 arch/arm/boot/dts/stm32mp157a-ugea512-mx.dts | 2280 +++++++++---------
 1 file changed, 1155 insertions(+), 1125 deletions(-)

diff --git a/arch/arm/boot/dts/stm32mp157a-ugea512-mx.dts b/arch/arm/boot/dts/stm32mp157a-ugea512-mx.dts
index 682c25d32..f4a86be1e 100644
--- a/arch/arm/boot/dts/stm32mp157a-ugea512-mx.dts
+++ b/arch/arm/boot/dts/stm32mp157a-ugea512-mx.dts
@@ -1,1125 +1,1155 @@
-/* SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause) */
-/*
- * Copyright (C) STMicroelectronics 2021 - All Rights Reserved
- * Author: STM32CubeMX code generation for STMicroelectronics.
- */
-
-/* For more information on Device Tree configuration, please refer to
- * https://wiki.st.com/stm32mpu/wiki/Category:Device_tree_configuration
- */
-
-/dts-v1/;
-#include <dt-bindings/pinctrl/stm32-pinfunc.h>
-
-#include "stm32mp157.dtsi"
-#include "stm32mp15xa.dtsi"
-#include "stm32mp15xxac-pinctrl.dtsi"
-#include "stm32mp15-m4-srm.dtsi"
-
-/* USER CODE BEGIN includes */
-#include <dt-bindings/rtc/rtc-stm32.h>
-/* USER CODE END includes */
-
-/ {
-	model = "STMicroelectronics custom STM32CubeMX board";
-	compatible = "st,stm32mp157a-ugea512-mx", "st,stm32mp157";
-
-	memory@c0000000 {
-		device_type = "memory";
-		reg = <0xc0000000 0x20000000>;
-
-		/* USER CODE BEGIN memory */
-		/* USER CODE END memory */
-	};
-
-	reserved-memory {
-		#address-cells = <1>;
-		#size-cells = <1>;
-		ranges;
-
-		/* USER CODE BEGIN reserved-memory */
-		mcuram2: mcuram2@10000000 {
-			compatible = "shared-dma-pool";
-			reg = <0x10000000 0x40000>;
-			no-map;
-		};
-
-		vdev0vring0: vdev0vring0@10040000 {
-			compatible = "shared-dma-pool";
-			reg = <0x10040000 0x1000>;
-			no-map;
-		};
-
-		vdev0vring1: vdev0vring1@10041000 {
-			compatible = "shared-dma-pool";
-			reg = <0x10041000 0x1000>;
-			no-map;
-		};
-
-		vdev0buffer: vdev0buffer@10042000 {
-			compatible = "shared-dma-pool";
-			reg = <0x10042000 0x4000>;
-			no-map;
-		};
-
-		mcuram: mcuram@30000000 {
-			compatible = "shared-dma-pool";
-			reg = <0x30000000 0x40000>;
-			no-map;
-		};
-
-		retram: retram@38000000 {
-			compatible = "shared-dma-pool";
-			reg = <0x38000000 0x10000>;
-			no-map;
-		};
-
-		gpu_reserved: gpu@d4000000 {
-			reg = <0xd4000000 0x4000000>;
-			no-map;
-		};
-		/* USER CODE END reserved-memory */
-	};
-
-	/* USER CODE BEGIN root */
-	aliases {
-		ethernet0 = &ethernet0;
-		serial0 = &uart4;
-		serial1 = &uart8;
-		serial2 = &usart3;
-		serial3 = &uart7;
-		serial4 = &usart1;
-		mmc0 = &sdmmc1;
-		mmc1 = &sdmmc3;
-	};	
-	
-	chosen {
-		stdout-path = "serial0:115200n8";
-	};
-	
-	usb_phy_tuning: usb-phy-tuning {
-		st,hs-dc-level = <2>;
-		st,fs-rftime-tuning;
-		st,hs-rftime-reduction;
-		st,hs-current-trim = <15>;
-		st,hs-impedance-trim = <1>;
-		st,squelch-level = <3>;
-		st,hs-rx-offset = <2>;
-		st,no-lsfs-sc;
-	};	
-	
-	vddcore: regulator-vddcore {
-		compatible = "regulator-fixed";
-		regulator-name = "vddcore";
-		regulator-min-microvolt = <1200000>;
-		regulator-max-microvolt = <1200000>;
-		regulator-always-on;
-	};
-
-	vdd: regulator-vdd {
-		compatible = "regulator-fixed";
-		regulator-name = "vdd";
-		regulator-min-microvolt = <3300000>;
-		regulator-max-microvolt = <3300000>;
-		regulator-always-on;
-	};
-
-	vdd_usb: regulator-vdd_usb {
-		compatible = "regulator-fixed";
-		regulator-name = "vdd_usb";
-		regulator-min-microvolt = <3300000>;
-		regulator-max-microvolt = <3300000>;
-		regulator-always-on;
-	};
-
-	vdda: regulator-vdda {
-		compatible = "regulator-fixed";
-		regulator-name = "vdda";
-		regulator-min-microvolt = <3300000>;
-		regulator-max-microvolt = <3300000>;
-		regulator-always-on;
-	};
-
-	vdd_ddr: regulator-vdd_ddr {
-		compatible = "regulator-fixed";
-		regulator-name = "vdd_ddr";
-		regulator-min-microvolt = <1350000>;
-		regulator-max-microvolt = <1350000>;
-		regulator-always-on;
-	};
-
-	vtt_ddr: regulator-vtt_ddr {
-		compatible = "regulator-fixed";
-		regulator-name = "vtt_ddr";
-		regulator-min-microvolt = <675000>;
-		regulator-max-microvolt = <675000>;
-		regulator-always-on;
-		vin-supply = <&vdd>;
-	};
-
-	vref_ddr: regulator-vref_ddr {
-		compatible = "regulator-fixed";
-		regulator-name = "vref_ddr";
-		regulator-min-microvolt = <675000>;
-		regulator-max-microvolt = <675000>;
-		regulator-always-on;
-		vin-supply = <&vdd>;
-	};
-
-	vdd_sd: regulator-vdd_sd {
-		compatible = "regulator-fixed";
-		regulator-name = "vdd_sd";
-		regulator-min-microvolt = <3300000>;
-		regulator-max-microvolt = <3300000>;
-		regulator-always-on;
-	};
-
-	v3v3: regulator-v3v3 {
-		compatible = "regulator-fixed";
-		regulator-name = "v3v3";
-		regulator-min-microvolt = <3300000>;
-		regulator-max-microvolt = <3300000>;
-		regulator-always-on;
-	};
-
-	v2v8: regulator-v2v8 {
-		compatible = "regulator-fixed";
-		regulator-name = "v2v8";
-		regulator-min-microvolt = <2800000>;
-		regulator-max-microvolt = <2800000>;
-		regulator-always-on;
-		vin-supply = <&v3v3>;
-	};
-
-	v1v8: regulator-v1v8 {
-		compatible = "regulator-fixed";
-		regulator-name = "v1v8";
-		regulator-min-microvolt = <1800000>;
-		regulator-max-microvolt = <1800000>;
-		regulator-always-on;
-		vin-supply = <&v3v3>;
-	};
-
-	vbus_otg: regulator-vbus_otg {
-		compatible = "regulator-fixed";
-		regulator-name = "vbus_otg";
-		regulator-min-microvolt = <5000000>;
-		regulator-max-microvolt = <5000000>;
-		regulator-always-on;
-	};
-
-	lcd_3v3: regulator-lcd_3v3 {
-		compatible = "regulator-fixed";
-		regulator-name = "lcd_3v3";
-		regulator-min-microvolt = <3300000>;
-		regulator-max-microvolt = <3300000>;
-		gpio = <&gpiof 10 0>;
-		enable-active-high;
-		regulator-always-on;
-	};
-
-	reg_bl: regulator-bt {
-		compatible = "regulator-fixed";
-		regulator-name = "bt";
-		regulator-min-microvolt = <3300000>;
-		regulator-max-microvolt = <3300000>;
-		gpio = <&gpioa 0 1>;
-		startup-delay-us = <100>;
-        enable-active-high;
-        regulator-always-on;
-	};
-
-	wifi_pwrseq: wifi-pwrseq {
-		compatible = "mmc-pwrseq-simple";
-		reset-gpios = <&gpiob 4 1>;
-		startup-delay-us = <10000>;
-		enable-active-high;
-	};
-	
-	panel_rgb: panel-rgb {
-		compatible = "auo,b101aw03";
-		status = "okay";		
-		port {
-			panel_in_rgb: endpoint {
-				remote-endpoint = <&ltdc_out_rgb>;
-			};
-		};
-	};
-
-	panel_pwr: regulator-panel_pwr {
-		compatible = "regulator-fixed";
-		regulator-name = "panel_pwr";
-		regulator-min-microvolt = <3300000>;
-		regulator-max-microvolt = <3300000>;
-		gpio = <&gpiob 10 0>;
-		regulator-always-on;
-	};	
-	
-    backlight {
-        compatible = "gpio-backlight";
-		gpios = <&gpiod 13 GPIO_ACTIVE_HIGH>;
-        default-on;
-    };	
-
-	/* USER CODE END root */
-
-	clocks {
-		/* USER CODE BEGIN clocks */
-		/* USER CODE END clocks */
-
-#ifndef CONFIG_TFABOOT
-		clk_lsi: clk-lsi {
-			clock-frequency = <32000>;
-		};
-		clk_hsi: clk-hsi {
-			clock-frequency = <64000000>;
-		};
-		clk_csi: clk-csi {
-			clock-frequency = <4000000>;
-		};
-		clk_lse: clk-lse {
-			clock-frequency = <32768>;
-		};
-		clk_hse: clk-hse {
-			clock-frequency = <24000000>;
-		};
-#endif	/*CONFIG_TFABOOT*/
-	};
-
-}; /*root*/
-
-&pinctrl {
-	u-boot,dm-pre-reloc;
-
-	eth1_pins_mx: eth1_mx-0 {
-		pins1 {
-			pinmux = <STM32_PINMUX('A', 1, AF0)>; /* ETH1_CLK */
-			bias-disable;
-			drive-push-pull;
-			slew-rate = <1>;
-		};
-		pins2 {
-			pinmux = <STM32_PINMUX('A', 2, AF11)>, /* ETH1_MDIO */
-					 <STM32_PINMUX('C', 1, AF11)>, /* ETH1_MDC */
-					 <STM32_PINMUX('G', 13, AF11)>, /* ETH1_TXD0 */
-					 <STM32_PINMUX('G', 14, AF11)>; /* ETH1_TXD1 */
-			bias-disable;
-			drive-push-pull;
-			slew-rate = <3>;
-		};
-		pins3 {
-			pinmux = <STM32_PINMUX('A', 7, AF11)>, /* ETH1_CRS_DV */
-					 <STM32_PINMUX('C', 4, AF11)>, /* ETH1_RXD0 */
-					 <STM32_PINMUX('C', 5, AF11)>; /* ETH1_RXD1 */
-			bias-disable;
-		};
-		pins4 {
-			pinmux = <STM32_PINMUX('B', 11, AF11)>; /* ETH1_TX_EN */
-		};
-	};
-
-	eth1_sleep_pins_mx: eth1_sleep_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('A', 1, ANALOG)>, /* ETH1_CLK */
-					 <STM32_PINMUX('A', 2, ANALOG)>, /* ETH1_MDIO */
-					 <STM32_PINMUX('A', 7, ANALOG)>, /* ETH1_CRS_DV */
-					 <STM32_PINMUX('B', 11, ANALOG)>, /* ETH1_TX_EN */
-					 <STM32_PINMUX('C', 1, ANALOG)>, /* ETH1_MDC */
-					 <STM32_PINMUX('C', 4, ANALOG)>, /* ETH1_RXD0 */
-					 <STM32_PINMUX('C', 5, ANALOG)>, /* ETH1_RXD1 */
-					 <STM32_PINMUX('G', 13, ANALOG)>, /* ETH1_TXD0 */
-					 <STM32_PINMUX('G', 14, ANALOG)>; /* ETH1_TXD1 */
-		};
-	};
-
-	fmc_pins_mx: fmc_mx-0 {
-		u-boot,dm-pre-reloc;
-		pins1 {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('D', 0, AF12)>, /* FMC_D2 */
-					 <STM32_PINMUX('D', 1, AF12)>, /* FMC_D3 */
-					 <STM32_PINMUX('D', 4, AF12)>, /* FMC_NOE */
-					 <STM32_PINMUX('D', 5, AF12)>, /* FMC_NWE */
-					 <STM32_PINMUX('D', 11, AF12)>, /* FMC_CLE */
-					 <STM32_PINMUX('D', 12, AF12)>, /* FMC_ALE */
-					 <STM32_PINMUX('D', 14, AF12)>, /* FMC_D0 */
-					 <STM32_PINMUX('D', 15, AF12)>, /* FMC_D1 */
-					 <STM32_PINMUX('E', 7, AF12)>, /* FMC_D4 */
-					 <STM32_PINMUX('E', 8, AF12)>, /* FMC_D5 */
-					 <STM32_PINMUX('E', 9, AF12)>, /* FMC_D6 */
-					 <STM32_PINMUX('E', 10, AF12)>, /* FMC_D7 */
-					 <STM32_PINMUX('G', 9, AF12)>; /* FMC_NCE */
-			bias-disable;
-			drive-push-pull;
-			slew-rate = <1>;
-		};
-		pins2 {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('D', 6, AF12)>; /* FMC_NWAIT */
-			bias-pull-up;
-		};
-	};
-
-	fmc_sleep_pins_mx: fmc_sleep_mx-0 {
-		u-boot,dm-pre-reloc;
-		pins {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('D', 0, ANALOG)>, /* FMC_D2 */
-					 <STM32_PINMUX('D', 1, ANALOG)>, /* FMC_D3 */
-					 <STM32_PINMUX('D', 4, ANALOG)>, /* FMC_NOE */
-					 <STM32_PINMUX('D', 5, ANALOG)>, /* FMC_NWE */
-					 <STM32_PINMUX('D', 6, ANALOG)>, /* FMC_NWAIT */
-					 <STM32_PINMUX('D', 11, ANALOG)>, /* FMC_CLE */
-					 <STM32_PINMUX('D', 12, ANALOG)>, /* FMC_ALE */
-					 <STM32_PINMUX('D', 14, ANALOG)>, /* FMC_D0 */
-					 <STM32_PINMUX('D', 15, ANALOG)>, /* FMC_D1 */
-					 <STM32_PINMUX('E', 7, ANALOG)>, /* FMC_D4 */
-					 <STM32_PINMUX('E', 8, ANALOG)>, /* FMC_D5 */
-					 <STM32_PINMUX('E', 9, ANALOG)>, /* FMC_D6 */
-					 <STM32_PINMUX('E', 10, ANALOG)>, /* FMC_D7 */
-					 <STM32_PINMUX('G', 9, ANALOG)>; /* FMC_NCE */
-		};
-	};
-
-	i2c2_pins_mx: i2c2_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('H', 4, AF4)>, /* I2C2_SCL */
-					 <STM32_PINMUX('H', 5, AF4)>; /* I2C2_SDA */
-			bias-disable;
-			drive-open-drain;
-			slew-rate = <0>;
-		};
-	};
-
-	i2c2_sleep_pins_mx: i2c2_sleep_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('H', 4, ANALOG)>, /* I2C2_SCL */
-					 <STM32_PINMUX('H', 5, ANALOG)>; /* I2C2_SDA */
-		};
-	};
-
-	i2c4_pins_mx: i2c4_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('B', 9, AF6)>; /* I2C4_SDA */
-			bias-disable;
-			drive-open-drain;
-			slew-rate = <0>;
-		};
-	};
-
-	i2c4_sleep_pins_mx: i2c4_sleep_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('B', 9, ANALOG)>; /* I2C4_SDA */
-		};
-	};
-
-	ltdc_pins_mx: ltdc_mx-0 {
-		pins1 {
-			pinmux = <STM32_PINMUX('B', 8, AF14)>, /* LTDC_B6 */
-					 <STM32_PINMUX('D', 9, AF14)>, /* LTDC_B0 */
-					 <STM32_PINMUX('D', 10, AF14)>, /* LTDC_B3 */
-					 <STM32_PINMUX('E', 5, AF14)>, /* LTDC_G0 */
-					 <STM32_PINMUX('E', 6, AF14)>, /* LTDC_G1 */
-					 <STM32_PINMUX('E', 13, AF14)>, /* LTDC_DE */
-					 <STM32_PINMUX('E', 15, AF14)>, /* LTDC_R7 */
-					 <STM32_PINMUX('G', 10, AF14)>, /* LTDC_B2 */
-					 <STM32_PINMUX('G', 12, AF14)>, /* LTDC_B1 */
-					 <STM32_PINMUX('H', 2, AF14)>, /* LTDC_R0 */
-					 <STM32_PINMUX('H', 3, AF14)>, /* LTDC_R1 */
-					 <STM32_PINMUX('H', 8, AF14)>, /* LTDC_R2 */
-					 <STM32_PINMUX('H', 9, AF14)>, /* LTDC_R3 */
-					 <STM32_PINMUX('H', 10, AF14)>, /* LTDC_R4 */
-					 <STM32_PINMUX('H', 11, AF14)>, /* LTDC_R5 */
-					 <STM32_PINMUX('H', 12, AF14)>, /* LTDC_R6 */
-					 <STM32_PINMUX('H', 13, AF14)>, /* LTDC_G2 */
-					 <STM32_PINMUX('H', 14, AF14)>, /* LTDC_G3 */
-					 <STM32_PINMUX('H', 15, AF14)>, /* LTDC_G4 */
-					 <STM32_PINMUX('I', 0, AF14)>, /* LTDC_G5 */
-					 <STM32_PINMUX('I', 1, AF14)>, /* LTDC_G6 */
-					 <STM32_PINMUX('I', 2, AF14)>, /* LTDC_G7 */
-					 <STM32_PINMUX('I', 4, AF14)>, /* LTDC_B4 */
-					 <STM32_PINMUX('I', 5, AF14)>, /* LTDC_B5 */
-					 <STM32_PINMUX('I', 7, AF14)>, /* LTDC_B7 */
-					 <STM32_PINMUX('I', 9, AF14)>, /* LTDC_VSYNC */
-					 <STM32_PINMUX('I', 10, AF14)>; /* LTDC_HSYNC */
-			bias-disable;
-			drive-push-pull;
-			slew-rate = <0>;
-		};
-		pins2 {
-			pinmux = <STM32_PINMUX('G', 7, AF14)>; /* LTDC_CLK */
-			bias-disable;
-			drive-push-pull;
-			slew-rate = <1>;
-		};
-	};
-
-	ltdc_sleep_pins_mx: ltdc_sleep_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('B', 8, ANALOG)>, /* LTDC_B6 */
-					 <STM32_PINMUX('D', 9, ANALOG)>, /* LTDC_B0 */
-					 <STM32_PINMUX('D', 10, ANALOG)>, /* LTDC_B3 */
-					 <STM32_PINMUX('E', 5, ANALOG)>, /* LTDC_G0 */
-					 <STM32_PINMUX('E', 6, ANALOG)>, /* LTDC_G1 */
-					 <STM32_PINMUX('E', 13, ANALOG)>, /* LTDC_DE */
-					 <STM32_PINMUX('E', 15, ANALOG)>, /* LTDC_R7 */
-					 <STM32_PINMUX('G', 7, ANALOG)>, /* LTDC_CLK */
-					 <STM32_PINMUX('G', 10, ANALOG)>, /* LTDC_B2 */
-					 <STM32_PINMUX('G', 12, ANALOG)>, /* LTDC_B1 */
-					 <STM32_PINMUX('H', 2, ANALOG)>, /* LTDC_R0 */
-					 <STM32_PINMUX('H', 3, ANALOG)>, /* LTDC_R1 */
-					 <STM32_PINMUX('H', 8, ANALOG)>, /* LTDC_R2 */
-					 <STM32_PINMUX('H', 9, ANALOG)>, /* LTDC_R3 */
-					 <STM32_PINMUX('H', 10, ANALOG)>, /* LTDC_R4 */
-					 <STM32_PINMUX('H', 11, ANALOG)>, /* LTDC_R5 */
-					 <STM32_PINMUX('H', 12, ANALOG)>, /* LTDC_R6 */
-					 <STM32_PINMUX('H', 13, ANALOG)>, /* LTDC_G2 */
-					 <STM32_PINMUX('H', 14, ANALOG)>, /* LTDC_G3 */
-					 <STM32_PINMUX('H', 15, ANALOG)>, /* LTDC_G4 */
-					 <STM32_PINMUX('I', 0, ANALOG)>, /* LTDC_G5 */
-					 <STM32_PINMUX('I', 1, ANALOG)>, /* LTDC_G6 */
-					 <STM32_PINMUX('I', 2, ANALOG)>, /* LTDC_G7 */
-					 <STM32_PINMUX('I', 4, ANALOG)>, /* LTDC_B4 */
-					 <STM32_PINMUX('I', 5, ANALOG)>, /* LTDC_B5 */
-					 <STM32_PINMUX('I', 7, ANALOG)>, /* LTDC_B7 */
-					 <STM32_PINMUX('I', 9, ANALOG)>, /* LTDC_VSYNC */
-					 <STM32_PINMUX('I', 10, ANALOG)>; /* LTDC_HSYNC */
-		};
-	};
-
-	rtc_pins_mx: rtc_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('I', 8, ANALOG)>; /* RTC_LSCO */
-		};
-	};
-
-	rtc_sleep_pins_mx: rtc_sleep_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('I', 8, ANALOG)>; /* RTC_LSCO */
-		};
-	};
-
-	sdmmc1_pins_mx: sdmmc1_mx-0 {
-		u-boot,dm-pre-reloc;
-		pins {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('C', 8, AF12)>, /* SDMMC1_D0 */
-					 <STM32_PINMUX('C', 9, AF12)>, /* SDMMC1_D1 */
-					 <STM32_PINMUX('C', 10, AF12)>, /* SDMMC1_D2 */
-					 <STM32_PINMUX('C', 11, AF12)>, /* SDMMC1_D3 */
-					 <STM32_PINMUX('C', 12, AF12)>, /* SDMMC1_CK */
-					 <STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
-			bias-pull-up;
-			drive-push-pull;
-			slew-rate = <2>;
-		};
-	};
-
-	sdmmc1_opendrain_pins_mx: sdmmc1_opendrain_mx-0 {
-		u-boot,dm-pre-reloc;
-		pins1 {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('C', 8, AF12)>, /* SDMMC1_D0 */
-					 <STM32_PINMUX('C', 9, AF12)>, /* SDMMC1_D1 */
-					 <STM32_PINMUX('C', 10, AF12)>, /* SDMMC1_D2 */
-					 <STM32_PINMUX('C', 11, AF12)>, /* SDMMC1_D3 */
-					 <STM32_PINMUX('C', 12, AF12)>; /* SDMMC1_CK */
-			bias-pull-up;
-			drive-push-pull;
-			slew-rate = <2>;
-		};
-		pins2 {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
-			bias-pull-up;
-			drive-open-drain;
-			slew-rate = <2>;
-		};
-	};
-
-	sdmmc1_sleep_pins_mx: sdmmc1_sleep_mx-0 {
-		u-boot,dm-pre-reloc;
-		pins {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('C', 8, ANALOG)>, /* SDMMC1_D0 */
-					 <STM32_PINMUX('C', 9, ANALOG)>, /* SDMMC1_D1 */
-					 <STM32_PINMUX('C', 10, ANALOG)>, /* SDMMC1_D2 */
-					 <STM32_PINMUX('C', 11, ANALOG)>, /* SDMMC1_D3 */
-					 <STM32_PINMUX('C', 12, ANALOG)>, /* SDMMC1_CK */
-					 <STM32_PINMUX('D', 2, ANALOG)>; /* SDMMC1_CMD */
-		};
-	};
-
-	sdmmc3_pins_mx: sdmmc3_mx-0 {
-		pins1 {
-			pinmux = <STM32_PINMUX('D', 7, AF10)>, /* SDMMC3_D3 */
-					 <STM32_PINMUX('F', 0, AF9)>, /* SDMMC3_D0 */
-					 <STM32_PINMUX('F', 1, AF9)>, /* SDMMC3_CMD */
-					 <STM32_PINMUX('F', 4, AF9)>, /* SDMMC3_D1 */
-					 <STM32_PINMUX('F', 5, AF9)>; /* SDMMC3_D2 */
-			bias-pull-up;
-			drive-push-pull;
-			slew-rate = <1>;
-		};
-		pins2 {
-			pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CK */
-			bias-pull-up;
-			drive-push-pull;
-			slew-rate = <3>;
-		};
-	};
-
-	sdmmc3_opendrain_pins_mx: sdmmc3_opendrain_mx-0 {
-		pins1 {
-			pinmux = <STM32_PINMUX('D', 7, AF10)>, /* SDMMC3_D3 */
-					 <STM32_PINMUX('F', 0, AF9)>, /* SDMMC3_D0 */
-					 <STM32_PINMUX('F', 4, AF9)>, /* SDMMC3_D1 */
-					 <STM32_PINMUX('F', 5, AF9)>; /* SDMMC3_D2 */
-			bias-pull-up;
-			drive-push-pull;
-			slew-rate = <1>;
-		};
-		pins2 {
-			pinmux = <STM32_PINMUX('F', 1, AF9)>; /* SDMMC3_CMD */
-			bias-pull-up;
-			drive-open-drain;
-			slew-rate = <1>;
-		};
-		pins3 {
-			pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CK */
-			bias-pull-up;
-			drive-push-pull;
-			slew-rate = <3>;
-		};
-	};
-
-	sdmmc3_sleep_pins_mx: sdmmc3_sleep_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('D', 7, ANALOG)>, /* SDMMC3_D3 */
-					 <STM32_PINMUX('F', 0, ANALOG)>, /* SDMMC3_D0 */
-					 <STM32_PINMUX('F', 1, ANALOG)>, /* SDMMC3_CMD */
-					 <STM32_PINMUX('F', 4, ANALOG)>, /* SDMMC3_D1 */
-					 <STM32_PINMUX('F', 5, ANALOG)>, /* SDMMC3_D2 */
-					 <STM32_PINMUX('G', 15, ANALOG)>; /* SDMMC3_CK */
-		};
-	};
-
-	uart4_pins_mx: uart4_mx-0 {
-		u-boot,dm-pre-reloc;
-		pins1 {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
-			bias-disable;
-		};
-		pins2 {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('G', 11, AF6)>; /* UART4_TX */
-			bias-disable;
-			drive-push-pull;
-			slew-rate = <0>;
-		};
-	};
-
-	uart4_sleep_pins_mx: uart4_sleep_mx-0 {
-		u-boot,dm-pre-reloc;
-		pins {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('B', 2, ANALOG)>, /* UART4_RX */
-					 <STM32_PINMUX('G', 11, ANALOG)>; /* UART4_TX */
-		};
-	};
-
-	uart7_pins_mx: uart7_mx-0 {
-		pins1 {
-			pinmux = <STM32_PINMUX('F', 6, AF7)>, /* UART7_RX */
-					 <STM32_PINMUX('F', 9, AF7)>; /* UART7_CTS */
-			bias-disable;
-		};
-		pins2 {
-			pinmux = <STM32_PINMUX('F', 7, AF7)>, /* UART7_TX */
-					 <STM32_PINMUX('F', 8, AF7)>; /* UART7_RTS */
-			bias-disable;
-			drive-push-pull;
-			slew-rate = <0>;
-		};
-	};
-
-	uart7_sleep_pins_mx: uart7_sleep_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('F', 6, ANALOG)>, /* UART7_RX */
-					 <STM32_PINMUX('F', 7, ANALOG)>, /* UART7_TX */
-					 <STM32_PINMUX('F', 8, ANALOG)>, /* UART7_RTS */
-					 <STM32_PINMUX('F', 9, ANALOG)>; /* UART7_CTS */
-		};
-	};
-
-	usart3_pins_mx: usart3_mx-0 {
-		u-boot,dm-pre-reloc;
-		pins1 {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('B', 10, AF7)>; /* USART3_TX */
-			bias-disable;
-			drive-push-pull;
-			slew-rate = <0>;
-		};
-		pins2 {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('B', 12, AF8)>; /* USART3_RX */
-			bias-disable;
-		};
-	};
-
-	usart3_sleep_pins_mx: usart3_sleep_mx-0 {
-		u-boot,dm-pre-reloc;
-		pins {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('B', 10, ANALOG)>, /* USART3_TX */
-					 <STM32_PINMUX('B', 12, ANALOG)>; /* USART3_RX */
-		};
-	};
-
-	usb_otg_hs_pins_mx: usb_otg_hs_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('A', 10, ANALOG)>; /* USB_OTG_HS_ID */
-		};
-	};
-
-	usb_otg_hs_sleep_pins_mx: usb_otg_hs_sleep_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('A', 10, ANALOG)>; /* USB_OTG_HS_ID */
-		};
-	};
-
-	/* USER CODE BEGIN pinctrl */
-	
-	eth_res: eth_res-0 {
-		pins {
-			pinmux = <STM32_PINMUX('A', 13, GPIO)>;
-			bias-disable;
-			drive-push-pull;
-			output-high;
-			slew-rate = <0>;
-		};
-	};
-	
-//	rtc_pins_mx: rtc_mx-0 {
-//		pins {
-//			pinmux = <STM32_PINMUX('I', 8, ANALOG)>; /* RTC_LSCO */
-//		};
-//	};	
-
-	pinctrl_edt_ft5x26: pinctrl_edt_ft5x26-0 {
-		pins {
-			pinmux = <STM32_PINMUX('B', 3, GPIO)>;
-		};	
-	};
-	/* USER CODE END pinctrl */
-};
-
-&pinctrl_z {
-	u-boot,dm-pre-reloc;
-
-	i2c4_pins_z_mx: i2c4_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('Z', 4, AF6)>; /* I2C4_SCL */
-			bias-disable;
-			drive-open-drain;
-			slew-rate = <0>;
-		};
-	};
-
-	i2c4_sleep_pins_z_mx: i2c4_sleep_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('Z', 4, ANALOG)>; /* I2C4_SCL */
-		};
-	};
-
-	usart1_pins_z_mx: usart1_mx-0 {
-		u-boot,dm-pre-reloc;
-		pins1 {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('Z', 6, AF7)>; /* USART1_RX */
-			bias-disable;
-		};
-		pins2 {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('Z', 7, AF7)>; /* USART1_TX */
-			bias-disable;
-			drive-push-pull;
-			slew-rate = <0>;
-		};
-	};
-
-	usart1_sleep_pins_z_mx: usart1_sleep_mx-0 {
-		u-boot,dm-pre-reloc;
-		pins {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('Z', 6, ANALOG)>, /* USART1_RX */
-					 <STM32_PINMUX('Z', 7, ANALOG)>; /* USART1_TX */
-		};
-	};
-
-	/* USER CODE BEGIN pinctrl_z */
-	/* USER CODE END pinctrl_z */
-};
-
-&m4_rproc{
-	status = "okay";
-
-	/* USER CODE BEGIN m4_rproc */
-	/* USER CODE END m4_rproc */
-};
-
-&bsec{
-	status = "okay";
-
-	/* USER CODE BEGIN bsec */
-	/* USER CODE END bsec */
-};
-
-&dma1{
-	status = "okay";
-
-	/* USER CODE BEGIN dma1 */
-	/* USER CODE END dma1 */
-};
-
-&dma2{
-	status = "okay";
-
-	/* USER CODE BEGIN dma2 */
-	/* USER CODE END dma2 */
-};
-
-&dmamux1{
-
-	dma-masters = <&dma1 &dma2>;
-	dma-channels = <16>;
-
-	status = "okay";
-
-	/* USER CODE BEGIN dmamux1 */
-	/* USER CODE END dmamux1 */
-};
-
-&ethernet0{
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&eth1_pins_mx>;
-	pinctrl-1 = <&eth1_sleep_pins_mx>;
-	status = "okay";
-
-	/* USER CODE BEGIN ethernet0 */
-	pinctrl-0 = <&eth1_pins_mx &eth_res>;
-	phy-mode = "rmii";
-	max-speed = <100>;
-	phy-handle = <&phy0>;
-	snps,ps-speed = <100>;
-	st,eth-ref-clk-sel;
-
-	clock-names = "stmmaceth",
-							"mac-clk-tx",
-							"mac-clk-rx",
-							"ethstp",
-							"syscfg-clk",
-							"eth-ck";
-
-	clocks = <&rcc ETHMAC>,
-					<&rcc ETHTX>,
-					<&rcc ETHRX>,
-					<&rcc ETHSTP>,
-					<&rcc SYSCFG>,
-					<&rcc ETHCK_K>;
-
-	mdio0 {
-		#address-cells = <1>;
-		#size-cells = <0>;
-		compatible = "snps,dwmac-mdio";
-		snps,reset-gpio = <&gpioa 13 0>;
-		snps,reset-delays-us = <25>;
-		snps,reset-active-low;
-
-		phy0: ethernet-phy-0 {
-			reg = <0>;
-		};
-	};
-	/* USER CODE END ethernet0 */
-};
-
-&fmc{
-	u-boot,dm-pre-reloc;
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&fmc_pins_mx>;
-	pinctrl-1 = <&fmc_sleep_pins_mx>;
-	status = "okay";
-
-	/* USER CODE BEGIN fmc */
-	nand-controller@4,0 {
-		status = "okay";
-
-		nand@0 {
-				reg = <0>;
-				nand-on-flash-bbt;
-				#address-cells = <1>;
-				#size-cells = <1>;
-		};
-	};
-	/* USER CODE END fmc */
-};
-
-&gpu{
-	status = "okay";
-
-	/* USER CODE BEGIN gpu */
-	/* USER CODE END gpu */
-};
-
-&hsem{
-	status = "okay";
-
-	/* USER CODE BEGIN hsem */
-	/* USER CODE END hsem */
-};
-
-&i2c2{
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&i2c2_pins_mx>;
-	pinctrl-1 = <&i2c2_sleep_pins_mx>;
-	status = "okay";
-
-	/* USER CODE BEGIN i2c2 */
-	polytouch: edt-ft5x26@38 {
-		compatible = "edt,edt-ft5526";
-		reg = <0x38>;
-		pinctrl-names = "default";		
-		pinctrl-0 = <&pinctrl_edt_ft5x26>;
-		interrupt-parent = <&gpiob>;
-		interrupts = <3 0>;	
-	};
-	/* USER CODE END i2c2 */
-};
-
-&i2c4{
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&i2c4_pins_mx &i2c4_pins_z_mx>;
-	pinctrl-1 = <&i2c4_sleep_pins_mx &i2c4_sleep_pins_z_mx>;
-	status = "okay";
-
-	/* USER CODE BEGIN i2c4 */
-	/* USER CODE END i2c4 */
-};
-
-&ltdc{
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&ltdc_pins_mx>;
-	pinctrl-1 = <&ltdc_sleep_pins_mx>;
-	status = "okay";
-
-	/* USER CODE BEGIN ltdc */
-
-	powerdown-gpios = <&gpiof 2 1>;
-	
-	
-	port{
-		#address-cells = <1>;
-		#size-cells = <0>;
-		
-		ltdc_out_rgb: endpoint@0 {
-			reg = <0>;
-			remote-endpoint = <&panel_in_rgb>;
-		};
-	};
-	
-	/* USER CODE END ltdc */
-};
-
-&mdma1{
-	status = "okay";
-
-	/* USER CODE BEGIN mdma1 */
-	/* USER CODE END mdma1 */
-};
-
-&rcc{
-	u-boot,dm-pre-reloc;
-	status = "okay";
-
-	/* USER CODE BEGIN rcc */
-	/* USER CODE END rcc */
-};
-
-&rtc{
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&rtc_pins_mx>;
-	pinctrl-1 = <&rtc_sleep_pins_mx>;
-	status = "okay";
-
-	/* USER CODE BEGIN rtc */
-//	pinctrl-names = "default";
-//	pinctrl-0 = <&rtc_pins_mx>;
-	st,lsco = <RTC_OUT2_RMP>;
-//	status = "okay";
-	/* USER CODE END rtc */
-};
-
-&sdmmc1{
-	u-boot,dm-pre-reloc;
-	pinctrl-names = "default", "opendrain", "sleep";
-	pinctrl-0 = <&sdmmc1_pins_mx>;
-	pinctrl-1 = <&sdmmc1_opendrain_pins_mx>;
-	pinctrl-2 = <&sdmmc1_sleep_pins_mx>;
-	status = "okay";
-
-	/* USER CODE BEGIN sdmmc1 */
-	broken-cd;
-	disable-wp;
-	st,neg-edge;
-	bus-width = <4>;
-	max-frequency = <10000000>;
-	vmmc-supply = <&v3v3>;	
-	/* USER CODE END sdmmc1 */
-};
-
-&sdmmc3{
-	pinctrl-names = "default", "opendrain", "sleep";
-	pinctrl-0 = <&sdmmc3_pins_mx>;
-	pinctrl-1 = <&sdmmc3_opendrain_pins_mx>;
-	pinctrl-2 = <&sdmmc3_sleep_pins_mx>;
-	status = "okay";
-
-	/* USER CODE BEGIN sdmmc3 */
-	#address-cells = <1>;
-	#size-cells = <0>;
-	u-boot,dm-pre-reloc;
-	arm,primecell-periphid = <0x10153180>;
-	non-removable;
-	st,neg-edge;
-	bus-width = <4>;
-	max-frequency = <25000000>;
-	vmmc-supply = <&v3v3>;
-	mmc-pwrseq = <&wifi_pwrseq>;
-
-	brcmf: wifi@1 {
-		compatible = "brcm,bcm4329-fmac";
-		reg = <1>;
-	};
-	/* USER CODE END sdmmc3 */
-};
-
-&tamp{
-	status = "okay";
-
-	/* USER CODE BEGIN tamp */
-	/* USER CODE END tamp */
-};
-
-&timers12{
-	status = "okay";
-
-	/* USER CODE BEGIN timers12 */
-	/* USER CODE END timers12 */
-};
-
-&uart4{
-	u-boot,dm-pre-reloc;
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&uart4_pins_mx>;
-	pinctrl-1 = <&uart4_sleep_pins_mx>;
-	status = "okay";
-
-	/* USER CODE BEGIN uart4 */
-	/* USER CODE END uart4 */
-};
-
-&uart7{
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&uart7_pins_mx>;
-	pinctrl-1 = <&uart7_sleep_pins_mx>;
-	status = "okay";
-
-	/* USER CODE BEGIN uart7 */
-    	vmmc-supply = <&reg_bl>;
-    	linux,rs485-enabled-at-boot-time;
-    	/*st,hw-flow-ctrl;*/
-	/* USER CODE END uart7 */
-};
-
-&usart1{
-	u-boot,dm-pre-reloc;
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&usart1_pins_z_mx>;
-	pinctrl-1 = <&usart1_sleep_pins_z_mx>;
-	status = "okay";
-
-	/* USER CODE BEGIN usart1 */
-	/* USER CODE END usart1 */
-};
-
-&usart3{
-	u-boot,dm-pre-reloc;
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&usart3_pins_mx>;
-	pinctrl-1 = <&usart3_sleep_pins_mx>;
-	status = "okay";
-
-	/* USER CODE BEGIN usart3 */
-	/* USER CODE END usart3 */
-};
-
-&usbh_ehci{
-	status = "okay";
-
-	/* USER CODE BEGIN usbh_ehci */
-	
-	phys = <&usbphyc_port0>;
-	phy-names = "usb";
-	
-	/* USER CODE END usbh_ehci */
-};
-
-&usbh_ohci{
-	status = "okay";
-
-	/* USER CODE BEGIN usbh_ohci */
-	
-	phys = <&usbphyc_port0>;
-	phy-names = "usb";
-	
-	/* USER CODE END usbh_ohci */
-};
-
-&usbotg_hs{
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&usb_otg_hs_pins_mx>;
-	pinctrl-1 = <&usb_otg_hs_sleep_pins_mx>;
-	status = "okay";
-
-	/* USER CODE BEGIN usbotg_hs */
-	/* USER CODE END usbotg_hs */
-};
-
-&usbphyc{
-	status = "okay";
-
-	/* USER CODE BEGIN usbphyc */
-	/* USER CODE END usbphyc */
-};
-
-&usbphyc_port0{
-	status = "okay";
-
-	/* USER CODE BEGIN usbphyc_port0 */
-	st,phy-tuning = <&usb_phy_tuning>;
-	/* USER CODE END usbphyc_port0 */
-};
-
-&usbphyc_port1{
-	status = "okay";
-
-	/* USER CODE BEGIN usbphyc_port1 */
-	st,phy-tuning = <&usb_phy_tuning>;
-	/* USER CODE END usbphyc_port1 */
-};
-
-/* USER CODE BEGIN addons */
-/* USER CODE END addons */
-
+/* SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause) */
+/*
+ * Copyright (C) STMicroelectronics 2021 - All Rights Reserved
+ * Author: STM32CubeMX code generation for STMicroelectronics.
+ */
+
+/* For more information on Device Tree configuration, please refer to
+ * https://wiki.st.com/stm32mpu/wiki/Category:Device_tree_configuration
+ */
+
+/dts-v1/;
+#include <dt-bindings/pinctrl/stm32-pinfunc.h>
+
+#include "stm32mp157.dtsi"
+#include "stm32mp15xa.dtsi"
+#include "stm32mp15xxac-pinctrl.dtsi"
+#include "stm32mp15-m4-srm.dtsi"
+
+/* USER CODE BEGIN includes */
+#include <dt-bindings/rtc/rtc-stm32.h>
+/* USER CODE END includes */
+
+/ {
+	model = "STMicroelectronics custom STM32CubeMX board";
+	compatible = "st,stm32mp157a-ugea512-mx", "st,stm32mp157";
+
+	memory@c0000000 {
+		device_type = "memory";
+		reg = <0xc0000000 0x20000000>;
+
+		/* USER CODE BEGIN memory */
+		/* USER CODE END memory */
+	};
+
+	reserved-memory {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges;
+
+		/* USER CODE BEGIN reserved-memory */
+		mcuram2: mcuram2@10000000 {
+			compatible = "shared-dma-pool";
+			reg = <0x10000000 0x40000>;
+			no-map;
+		};
+
+		vdev0vring0: vdev0vring0@10040000 {
+			compatible = "shared-dma-pool";
+			reg = <0x10040000 0x1000>;
+			no-map;
+		};
+
+		vdev0vring1: vdev0vring1@10041000 {
+			compatible = "shared-dma-pool";
+			reg = <0x10041000 0x1000>;
+			no-map;
+		};
+
+		vdev0buffer: vdev0buffer@10042000 {
+			compatible = "shared-dma-pool";
+			reg = <0x10042000 0x4000>;
+			no-map;
+		};
+
+		mcuram: mcuram@30000000 {
+			compatible = "shared-dma-pool";
+			reg = <0x30000000 0x40000>;
+			no-map;
+		};
+
+		retram: retram@38000000 {
+			compatible = "shared-dma-pool";
+			reg = <0x38000000 0x10000>;
+			no-map;
+		};
+
+		gpu_reserved: gpu@d4000000 {
+			reg = <0xd4000000 0x4000000>;
+			no-map;
+		};
+		/* USER CODE END reserved-memory */
+	};
+
+	/* USER CODE BEGIN root */
+	aliases {
+		ethernet0 = &ethernet0;
+		serial0 = &uart4;
+		serial1 = &uart8;
+		serial2 = &usart3;
+		serial3 = &uart7;
+		serial4 = &usart1;
+		mmc0 = &sdmmc1;
+		mmc1 = &sdmmc3;
+	};	
+	
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+	
+	usb_phy_tuning: usb-phy-tuning {
+		st,hs-dc-level = <2>;
+		st,fs-rftime-tuning;
+		st,hs-rftime-reduction;
+		st,hs-current-trim = <15>;
+		st,hs-impedance-trim = <1>;
+		st,squelch-level = <3>;
+		st,hs-rx-offset = <2>;
+		st,no-lsfs-sc;
+	};	
+	
+	vddcore: regulator-vddcore {
+		compatible = "regulator-fixed";
+		regulator-name = "vddcore";
+		regulator-min-microvolt = <1200000>;
+		regulator-max-microvolt = <1200000>;
+		regulator-always-on;
+	};
+
+	vdd: regulator-vdd {
+		compatible = "regulator-fixed";
+		regulator-name = "vdd";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+	};
+
+	vdd_usb: regulator-vdd_usb {
+		compatible = "regulator-fixed";
+		regulator-name = "vdd_usb";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+	};
+
+	vdda: regulator-vdda {
+		compatible = "regulator-fixed";
+		regulator-name = "vdda";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+	};
+
+	vdd_ddr: regulator-vdd_ddr {
+		compatible = "regulator-fixed";
+		regulator-name = "vdd_ddr";
+		regulator-min-microvolt = <1350000>;
+		regulator-max-microvolt = <1350000>;
+		regulator-always-on;
+	};
+
+	vtt_ddr: regulator-vtt_ddr {
+		compatible = "regulator-fixed";
+		regulator-name = "vtt_ddr";
+		regulator-min-microvolt = <675000>;
+		regulator-max-microvolt = <675000>;
+		regulator-always-on;
+		vin-supply = <&vdd>;
+	};
+
+	vref_ddr: regulator-vref_ddr {
+		compatible = "regulator-fixed";
+		regulator-name = "vref_ddr";
+		regulator-min-microvolt = <675000>;
+		regulator-max-microvolt = <675000>;
+		regulator-always-on;
+		vin-supply = <&vdd>;
+	};
+
+	vdd_sd: regulator-vdd_sd {
+		compatible = "regulator-fixed";
+		regulator-name = "vdd_sd";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+	};
+
+	v3v3: regulator-v3v3 {
+		compatible = "regulator-fixed";
+		regulator-name = "v3v3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+	};
+
+	v2v8: regulator-v2v8 {
+		compatible = "regulator-fixed";
+		regulator-name = "v2v8";
+		regulator-min-microvolt = <2800000>;
+		regulator-max-microvolt = <2800000>;
+		regulator-always-on;
+		vin-supply = <&v3v3>;
+	};
+
+	v1v8: regulator-v1v8 {
+		compatible = "regulator-fixed";
+		regulator-name = "v1v8";
+		regulator-min-microvolt = <1800000>;
+		regulator-max-microvolt = <1800000>;
+		regulator-always-on;
+		vin-supply = <&v3v3>;
+	};
+
+	vbus_otg: regulator-vbus_otg {
+		compatible = "regulator-fixed";
+		regulator-name = "vbus_otg";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		regulator-always-on;
+	};
+
+	lcd_3v3: regulator-lcd_3v3 {
+		compatible = "regulator-fixed";
+		regulator-name = "lcd_3v3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpiof 10 0>;
+		enable-active-high;
+		regulator-always-on;
+	};
+
+	reg_bl: regulator-bt {
+		compatible = "regulator-fixed";
+		regulator-name = "bt";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpioa 0 1>;
+		startup-delay-us = <100>;
+        enable-active-high;
+        regulator-always-on;
+	};
+
+	wifi_pwrseq: wifi-pwrseq {
+		compatible = "mmc-pwrseq-simple";
+		reset-gpios = <&gpiob 4 1>;
+		startup-delay-us = <10000>;
+		enable-active-high;
+	};
+	
+	panel_rgb: panel-rgb {
+		compatible = "auo,b101aw03";
+		status = "okay";		
+		port {
+			panel_in_rgb: endpoint {
+				remote-endpoint = <&ltdc_out_rgb>;
+			};
+		};
+	};
+
+	panel_pwr: regulator-panel_pwr {
+		compatible = "regulator-fixed";
+		regulator-name = "panel_pwr";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpiob 10 0>;
+		regulator-always-on;
+	};	
+	
+    backlight {
+        compatible = "gpio-backlight";
+		gpios = <&gpiod 13 GPIO_ACTIVE_HIGH>;
+        default-on;
+    };	
+
+	/* USER CODE END root */
+
+	clocks {
+		/* USER CODE BEGIN clocks */
+		/* USER CODE END clocks */
+
+#ifndef CONFIG_TFABOOT
+		clk_lsi: clk-lsi {
+			clock-frequency = <32000>;
+		};
+		clk_hsi: clk-hsi {
+			clock-frequency = <64000000>;
+		};
+		clk_csi: clk-csi {
+			clock-frequency = <4000000>;
+		};
+		clk_lse: clk-lse {
+			clock-frequency = <32768>;
+		};
+		clk_hse: clk-hse {
+			clock-frequency = <24000000>;
+		};
+#endif	/*CONFIG_TFABOOT*/
+	};
+
+}; /*root*/
+
+&pinctrl {
+	u-boot,dm-pre-reloc;
+
+	eth1_pins_mx: eth1_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('A', 1, AF0)>; /* ETH1_CLK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('A', 2, AF11)>, /* ETH1_MDIO */
+					 <STM32_PINMUX('C', 1, AF11)>, /* ETH1_MDC */
+					 <STM32_PINMUX('G', 13, AF11)>, /* ETH1_TXD0 */
+					 <STM32_PINMUX('G', 14, AF11)>; /* ETH1_TXD1 */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+		pins3 {
+			pinmux = <STM32_PINMUX('A', 7, AF11)>, /* ETH1_CRS_DV */
+					 <STM32_PINMUX('C', 4, AF11)>, /* ETH1_RXD0 */
+					 <STM32_PINMUX('C', 5, AF11)>; /* ETH1_RXD1 */
+			bias-disable;
+		};
+		pins4 {
+			pinmux = <STM32_PINMUX('B', 11, AF11)>; /* ETH1_TX_EN */
+		};
+	};
+
+	eth1_sleep_pins_mx: eth1_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 1, ANALOG)>, /* ETH1_CLK */
+					 <STM32_PINMUX('A', 2, ANALOG)>, /* ETH1_MDIO */
+					 <STM32_PINMUX('A', 7, ANALOG)>, /* ETH1_CRS_DV */
+					 <STM32_PINMUX('B', 11, ANALOG)>, /* ETH1_TX_EN */
+					 <STM32_PINMUX('C', 1, ANALOG)>, /* ETH1_MDC */
+					 <STM32_PINMUX('C', 4, ANALOG)>, /* ETH1_RXD0 */
+					 <STM32_PINMUX('C', 5, ANALOG)>, /* ETH1_RXD1 */
+					 <STM32_PINMUX('G', 13, ANALOG)>, /* ETH1_TXD0 */
+					 <STM32_PINMUX('G', 14, ANALOG)>; /* ETH1_TXD1 */
+		};
+	};
+
+	fmc_pins_mx: fmc_mx-0 {
+		u-boot,dm-pre-reloc;
+		pins1 {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('D', 0, AF12)>, /* FMC_D2 */
+					 <STM32_PINMUX('D', 1, AF12)>, /* FMC_D3 */
+					 <STM32_PINMUX('D', 4, AF12)>, /* FMC_NOE */
+					 <STM32_PINMUX('D', 5, AF12)>, /* FMC_NWE */
+					 <STM32_PINMUX('D', 11, AF12)>, /* FMC_CLE */
+					 <STM32_PINMUX('D', 12, AF12)>, /* FMC_ALE */
+					 <STM32_PINMUX('D', 14, AF12)>, /* FMC_D0 */
+					 <STM32_PINMUX('D', 15, AF12)>, /* FMC_D1 */
+					 <STM32_PINMUX('E', 7, AF12)>, /* FMC_D4 */
+					 <STM32_PINMUX('E', 8, AF12)>, /* FMC_D5 */
+					 <STM32_PINMUX('E', 9, AF12)>, /* FMC_D6 */
+					 <STM32_PINMUX('E', 10, AF12)>, /* FMC_D7 */
+					 <STM32_PINMUX('G', 9, AF12)>; /* FMC_NCE */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins2 {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('D', 6, AF12)>; /* FMC_NWAIT */
+			bias-pull-up;
+		};
+	};
+
+	fmc_sleep_pins_mx: fmc_sleep_mx-0 {
+		u-boot,dm-pre-reloc;
+		pins {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('D', 0, ANALOG)>, /* FMC_D2 */
+					 <STM32_PINMUX('D', 1, ANALOG)>, /* FMC_D3 */
+					 <STM32_PINMUX('D', 4, ANALOG)>, /* FMC_NOE */
+					 <STM32_PINMUX('D', 5, ANALOG)>, /* FMC_NWE */
+					 <STM32_PINMUX('D', 6, ANALOG)>, /* FMC_NWAIT */
+					 <STM32_PINMUX('D', 11, ANALOG)>, /* FMC_CLE */
+					 <STM32_PINMUX('D', 12, ANALOG)>, /* FMC_ALE */
+					 <STM32_PINMUX('D', 14, ANALOG)>, /* FMC_D0 */
+					 <STM32_PINMUX('D', 15, ANALOG)>, /* FMC_D1 */
+					 <STM32_PINMUX('E', 7, ANALOG)>, /* FMC_D4 */
+					 <STM32_PINMUX('E', 8, ANALOG)>, /* FMC_D5 */
+					 <STM32_PINMUX('E', 9, ANALOG)>, /* FMC_D6 */
+					 <STM32_PINMUX('E', 10, ANALOG)>, /* FMC_D7 */
+					 <STM32_PINMUX('G', 9, ANALOG)>; /* FMC_NCE */
+		};
+	};
+
+	i2c2_pins_mx: i2c2_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('H', 4, AF4)>, /* I2C2_SCL */
+					 <STM32_PINMUX('H', 5, AF4)>; /* I2C2_SDA */
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <0>;
+		};
+	};
+
+	i2c2_sleep_pins_mx: i2c2_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('H', 4, ANALOG)>, /* I2C2_SCL */
+					 <STM32_PINMUX('H', 5, ANALOG)>; /* I2C2_SDA */
+		};
+	};
+
+	i2c4_pins_mx: i2c4_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('B', 9, AF6)>; /* I2C4_SDA */
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <0>;
+		};
+	};
+
+	i2c4_sleep_pins_mx: i2c4_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('B', 9, ANALOG)>; /* I2C4_SDA */
+		};
+	};
+
+	ltdc_pins_mx: ltdc_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 8, AF14)>, /* LTDC_B6 */
+					 <STM32_PINMUX('D', 9, AF14)>, /* LTDC_B0 */
+					 <STM32_PINMUX('D', 10, AF14)>, /* LTDC_B3 */
+					 <STM32_PINMUX('E', 5, AF14)>, /* LTDC_G0 */
+					 <STM32_PINMUX('E', 6, AF14)>, /* LTDC_G1 */
+					 <STM32_PINMUX('E', 13, AF14)>, /* LTDC_DE */
+					 <STM32_PINMUX('E', 15, AF14)>, /* LTDC_R7 */
+					 <STM32_PINMUX('G', 10, AF14)>, /* LTDC_B2 */
+					 <STM32_PINMUX('G', 12, AF14)>, /* LTDC_B1 */
+					 <STM32_PINMUX('H', 2, AF14)>, /* LTDC_R0 */
+					 <STM32_PINMUX('H', 3, AF14)>, /* LTDC_R1 */
+					 <STM32_PINMUX('H', 8, AF14)>, /* LTDC_R2 */
+					 <STM32_PINMUX('H', 9, AF14)>, /* LTDC_R3 */
+					 <STM32_PINMUX('H', 10, AF14)>, /* LTDC_R4 */
+					 <STM32_PINMUX('H', 11, AF14)>, /* LTDC_R5 */
+					 <STM32_PINMUX('H', 12, AF14)>, /* LTDC_R6 */
+					 <STM32_PINMUX('H', 13, AF14)>, /* LTDC_G2 */
+					 <STM32_PINMUX('H', 14, AF14)>, /* LTDC_G3 */
+					 <STM32_PINMUX('H', 15, AF14)>, /* LTDC_G4 */
+					 <STM32_PINMUX('I', 0, AF14)>, /* LTDC_G5 */
+					 <STM32_PINMUX('I', 1, AF14)>, /* LTDC_G6 */
+					 <STM32_PINMUX('I', 2, AF14)>, /* LTDC_G7 */
+					 <STM32_PINMUX('I', 4, AF14)>, /* LTDC_B4 */
+					 <STM32_PINMUX('I', 5, AF14)>, /* LTDC_B5 */
+					 <STM32_PINMUX('I', 7, AF14)>, /* LTDC_B7 */
+					 <STM32_PINMUX('I', 9, AF14)>, /* LTDC_VSYNC */
+					 <STM32_PINMUX('I', 10, AF14)>; /* LTDC_HSYNC */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('G', 7, AF14)>; /* LTDC_CLK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+	};
+
+	ltdc_sleep_pins_mx: ltdc_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('B', 8, ANALOG)>, /* LTDC_B6 */
+					 <STM32_PINMUX('D', 9, ANALOG)>, /* LTDC_B0 */
+					 <STM32_PINMUX('D', 10, ANALOG)>, /* LTDC_B3 */
+					 <STM32_PINMUX('E', 5, ANALOG)>, /* LTDC_G0 */
+					 <STM32_PINMUX('E', 6, ANALOG)>, /* LTDC_G1 */
+					 <STM32_PINMUX('E', 13, ANALOG)>, /* LTDC_DE */
+					 <STM32_PINMUX('E', 15, ANALOG)>, /* LTDC_R7 */
+					 <STM32_PINMUX('G', 7, ANALOG)>, /* LTDC_CLK */
+					 <STM32_PINMUX('G', 10, ANALOG)>, /* LTDC_B2 */
+					 <STM32_PINMUX('G', 12, ANALOG)>, /* LTDC_B1 */
+					 <STM32_PINMUX('H', 2, ANALOG)>, /* LTDC_R0 */
+					 <STM32_PINMUX('H', 3, ANALOG)>, /* LTDC_R1 */
+					 <STM32_PINMUX('H', 8, ANALOG)>, /* LTDC_R2 */
+					 <STM32_PINMUX('H', 9, ANALOG)>, /* LTDC_R3 */
+					 <STM32_PINMUX('H', 10, ANALOG)>, /* LTDC_R4 */
+					 <STM32_PINMUX('H', 11, ANALOG)>, /* LTDC_R5 */
+					 <STM32_PINMUX('H', 12, ANALOG)>, /* LTDC_R6 */
+					 <STM32_PINMUX('H', 13, ANALOG)>, /* LTDC_G2 */
+					 <STM32_PINMUX('H', 14, ANALOG)>, /* LTDC_G3 */
+					 <STM32_PINMUX('H', 15, ANALOG)>, /* LTDC_G4 */
+					 <STM32_PINMUX('I', 0, ANALOG)>, /* LTDC_G5 */
+					 <STM32_PINMUX('I', 1, ANALOG)>, /* LTDC_G6 */
+					 <STM32_PINMUX('I', 2, ANALOG)>, /* LTDC_G7 */
+					 <STM32_PINMUX('I', 4, ANALOG)>, /* LTDC_B4 */
+					 <STM32_PINMUX('I', 5, ANALOG)>, /* LTDC_B5 */
+					 <STM32_PINMUX('I', 7, ANALOG)>, /* LTDC_B7 */
+					 <STM32_PINMUX('I', 9, ANALOG)>, /* LTDC_VSYNC */
+					 <STM32_PINMUX('I', 10, ANALOG)>; /* LTDC_HSYNC */
+		};
+	};
+
+	rtc_pins_mx: rtc_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('I', 8, ANALOG)>; /* RTC_LSCO */
+		};
+	};
+
+	rtc_sleep_pins_mx: rtc_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('I', 8, ANALOG)>; /* RTC_LSCO */
+		};
+	};
+
+	sdmmc1_pins_mx: sdmmc1_mx-0 {
+		u-boot,dm-pre-reloc;
+		pins {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('C', 8, AF12)>, /* SDMMC1_D0 */
+					 <STM32_PINMUX('C', 9, AF12)>, /* SDMMC1_D1 */
+					 <STM32_PINMUX('C', 10, AF12)>, /* SDMMC1_D2 */
+					 <STM32_PINMUX('C', 11, AF12)>, /* SDMMC1_D3 */
+					 <STM32_PINMUX('C', 12, AF12)>, /* SDMMC1_CK */
+					 <STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
+			bias-pull-up;
+			drive-push-pull;
+			slew-rate = <2>;
+		};
+	};
+
+	sdmmc1_opendrain_pins_mx: sdmmc1_opendrain_mx-0 {
+		u-boot,dm-pre-reloc;
+		pins1 {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('C', 8, AF12)>, /* SDMMC1_D0 */
+					 <STM32_PINMUX('C', 9, AF12)>, /* SDMMC1_D1 */
+					 <STM32_PINMUX('C', 10, AF12)>, /* SDMMC1_D2 */
+					 <STM32_PINMUX('C', 11, AF12)>, /* SDMMC1_D3 */
+					 <STM32_PINMUX('C', 12, AF12)>; /* SDMMC1_CK */
+			bias-pull-up;
+			drive-push-pull;
+			slew-rate = <2>;
+		};
+		pins2 {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
+			bias-pull-up;
+			drive-open-drain;
+			slew-rate = <2>;
+		};
+	};
+
+	sdmmc1_sleep_pins_mx: sdmmc1_sleep_mx-0 {
+		u-boot,dm-pre-reloc;
+		pins {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('C', 8, ANALOG)>, /* SDMMC1_D0 */
+					 <STM32_PINMUX('C', 9, ANALOG)>, /* SDMMC1_D1 */
+					 <STM32_PINMUX('C', 10, ANALOG)>, /* SDMMC1_D2 */
+					 <STM32_PINMUX('C', 11, ANALOG)>, /* SDMMC1_D3 */
+					 <STM32_PINMUX('C', 12, ANALOG)>, /* SDMMC1_CK */
+					 <STM32_PINMUX('D', 2, ANALOG)>; /* SDMMC1_CMD */
+		};
+	};
+
+	sdmmc3_pins_mx: sdmmc3_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('D', 7, AF10)>, /* SDMMC3_D3 */
+					 <STM32_PINMUX('F', 0, AF9)>, /* SDMMC3_D0 */
+					 <STM32_PINMUX('F', 1, AF9)>, /* SDMMC3_CMD */
+					 <STM32_PINMUX('F', 4, AF9)>, /* SDMMC3_D1 */
+					 <STM32_PINMUX('F', 5, AF9)>; /* SDMMC3_D2 */
+			bias-pull-up;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CK */
+			bias-pull-up;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	sdmmc3_opendrain_pins_mx: sdmmc3_opendrain_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('D', 7, AF10)>, /* SDMMC3_D3 */
+					 <STM32_PINMUX('F', 0, AF9)>, /* SDMMC3_D0 */
+					 <STM32_PINMUX('F', 4, AF9)>, /* SDMMC3_D1 */
+					 <STM32_PINMUX('F', 5, AF9)>; /* SDMMC3_D2 */
+			bias-pull-up;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('F', 1, AF9)>; /* SDMMC3_CMD */
+			bias-pull-up;
+			drive-open-drain;
+			slew-rate = <1>;
+		};
+		pins3 {
+			pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CK */
+			bias-pull-up;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	sdmmc3_sleep_pins_mx: sdmmc3_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('D', 7, ANALOG)>, /* SDMMC3_D3 */
+					 <STM32_PINMUX('F', 0, ANALOG)>, /* SDMMC3_D0 */
+					 <STM32_PINMUX('F', 1, ANALOG)>, /* SDMMC3_CMD */
+					 <STM32_PINMUX('F', 4, ANALOG)>, /* SDMMC3_D1 */
+					 <STM32_PINMUX('F', 5, ANALOG)>, /* SDMMC3_D2 */
+					 <STM32_PINMUX('G', 15, ANALOG)>; /* SDMMC3_CK */
+		};
+	};
+
+	uart4_pins_mx: uart4_mx-0 {
+		u-boot,dm-pre-reloc;
+		pins1 {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
+			bias-disable;
+		};
+		pins2 {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('G', 11, AF6)>; /* UART4_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	uart4_sleep_pins_mx: uart4_sleep_mx-0 {
+		u-boot,dm-pre-reloc;
+		pins {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('B', 2, ANALOG)>, /* UART4_RX */
+					 <STM32_PINMUX('G', 11, ANALOG)>; /* UART4_TX */
+		};
+	};
+
+	uart7_pins_mx: uart7_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('F', 6, AF7)>, /* UART7_RX */
+					 <STM32_PINMUX('F', 9, AF7)>; /* UART7_CTS */
+			bias-disable;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('F', 7, AF7)>, /* UART7_TX */
+					 <STM32_PINMUX('F', 8, AF7)>; /* UART7_RTS */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	uart7_sleep_pins_mx: uart7_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('F', 6, ANALOG)>, /* UART7_RX */
+					 <STM32_PINMUX('F', 7, ANALOG)>, /* UART7_TX */
+					 <STM32_PINMUX('F', 8, ANALOG)>, /* UART7_RTS */
+					 <STM32_PINMUX('F', 9, ANALOG)>; /* UART7_CTS */
+		};
+	};
+
+	uart8_pins_mx: uart8_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('E', 0, AF8)>; /* UART8_RX */
+			bias-disable;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 1, AF8)>; /* UART8_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	uart8_sleep_pins_mx: uart8_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 0, ANALOG)>, /* UART8_RX */
+					 <STM32_PINMUX('E', 1, ANALOG)>; /* UART8_TX */
+		};
+	};
+
+	usart3_pins_mx: usart3_mx-0 {
+		u-boot,dm-pre-reloc;
+		pins1 {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('B', 10, AF7)>; /* USART3_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+		pins2 {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('B', 12, AF8)>; /* USART3_RX */
+			bias-disable;
+		};
+	};
+
+	usart3_sleep_pins_mx: usart3_sleep_mx-0 {
+		u-boot,dm-pre-reloc;
+		pins {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('B', 10, ANALOG)>, /* USART3_TX */
+					 <STM32_PINMUX('B', 12, ANALOG)>; /* USART3_RX */
+		};
+	};
+
+	usb_otg_hs_pins_mx: usb_otg_hs_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 10, ANALOG)>; /* USB_OTG_HS_ID */
+		};
+	};
+
+	usb_otg_hs_sleep_pins_mx: usb_otg_hs_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 10, ANALOG)>; /* USB_OTG_HS_ID */
+		};
+	};
+
+	/* USER CODE BEGIN pinctrl */
+	
+	eth_res: eth_res-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 13, GPIO)>;
+			bias-disable;
+			drive-push-pull;
+			output-high;
+			slew-rate = <0>;
+		};
+	};
+	
+//	rtc_pins_mx: rtc_mx-0 {
+//		pins {
+//			pinmux = <STM32_PINMUX('I', 8, ANALOG)>; /* RTC_LSCO */
+//		};
+//	};	
+
+	pinctrl_edt_ft5x26: pinctrl_edt_ft5x26-0 {
+		pins {
+			pinmux = <STM32_PINMUX('B', 3, GPIO)>;
+		};	
+	};
+	/* USER CODE END pinctrl */
+};
+
+&pinctrl_z {
+	u-boot,dm-pre-reloc;
+
+	i2c4_pins_z_mx: i2c4_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('Z', 4, AF6)>; /* I2C4_SCL */
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <0>;
+		};
+	};
+
+	i2c4_sleep_pins_z_mx: i2c4_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('Z', 4, ANALOG)>; /* I2C4_SCL */
+		};
+	};
+
+	usart1_pins_z_mx: usart1_mx-0 {
+		u-boot,dm-pre-reloc;
+		pins1 {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('Z', 6, AF7)>; /* USART1_RX */
+			bias-disable;
+		};
+		pins2 {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('Z', 7, AF7)>; /* USART1_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	usart1_sleep_pins_z_mx: usart1_sleep_mx-0 {
+		u-boot,dm-pre-reloc;
+		pins {
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('Z', 6, ANALOG)>, /* USART1_RX */
+					 <STM32_PINMUX('Z', 7, ANALOG)>; /* USART1_TX */
+		};
+	};
+
+	/* USER CODE BEGIN pinctrl_z */
+	/* USER CODE END pinctrl_z */
+};
+
+&m4_rproc{
+	status = "okay";
+
+	/* USER CODE BEGIN m4_rproc */
+	/* USER CODE END m4_rproc */
+};
+
+&bsec{
+	status = "okay";
+
+	/* USER CODE BEGIN bsec */
+	/* USER CODE END bsec */
+};
+
+&dma1{
+	status = "okay";
+
+	/* USER CODE BEGIN dma1 */
+	/* USER CODE END dma1 */
+};
+
+&dma2{
+	status = "okay";
+
+	/* USER CODE BEGIN dma2 */
+	/* USER CODE END dma2 */
+};
+
+&dmamux1{
+
+	dma-masters = <&dma1 &dma2>;
+	dma-channels = <16>;
+
+	status = "okay";
+
+	/* USER CODE BEGIN dmamux1 */
+	/* USER CODE END dmamux1 */
+};
+
+&ethernet0{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&eth1_pins_mx>;
+	pinctrl-1 = <&eth1_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN ethernet0 */
+	pinctrl-0 = <&eth1_pins_mx &eth_res>;
+	phy-mode = "rmii";
+	max-speed = <100>;
+	phy-handle = <&phy0>;
+	snps,ps-speed = <100>;
+	st,eth-ref-clk-sel;
+
+	clock-names = "stmmaceth",
+							"mac-clk-tx",
+							"mac-clk-rx",
+							"ethstp",
+							"syscfg-clk",
+							"eth-ck";
+
+	clocks = <&rcc ETHMAC>,
+					<&rcc ETHTX>,
+					<&rcc ETHRX>,
+					<&rcc ETHSTP>,
+					<&rcc SYSCFG>,
+					<&rcc ETHCK_K>;
+
+	mdio0 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		compatible = "snps,dwmac-mdio";
+		snps,reset-gpio = <&gpioa 13 0>;
+		snps,reset-delays-us = <25>;
+		snps,reset-active-low;
+
+		phy0: ethernet-phy-0 {
+			reg = <0>;
+		};
+	};
+	/* USER CODE END ethernet0 */
+};
+
+&fmc{
+	u-boot,dm-pre-reloc;
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&fmc_pins_mx>;
+	pinctrl-1 = <&fmc_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN fmc */
+	nand-controller@4,0 {
+		status = "okay";
+
+		nand@0 {
+				reg = <0>;
+				nand-on-flash-bbt;
+				#address-cells = <1>;
+				#size-cells = <1>;
+		};
+	};
+	/* USER CODE END fmc */
+};
+
+&gpu{
+	status = "okay";
+
+	/* USER CODE BEGIN gpu */
+	/* USER CODE END gpu */
+};
+
+&hsem{
+	status = "okay";
+
+	/* USER CODE BEGIN hsem */
+	/* USER CODE END hsem */
+};
+
+&i2c2{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&i2c2_pins_mx>;
+	pinctrl-1 = <&i2c2_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN i2c2 */
+	polytouch: edt-ft5x26@38 {
+		compatible = "edt,edt-ft5526";
+		reg = <0x38>;
+		pinctrl-names = "default";		
+		pinctrl-0 = <&pinctrl_edt_ft5x26>;
+		interrupt-parent = <&gpiob>;
+		interrupts = <3 0>;	
+	};
+	/* USER CODE END i2c2 */
+};
+
+&i2c4{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&i2c4_pins_mx &i2c4_pins_z_mx>;
+	pinctrl-1 = <&i2c4_sleep_pins_mx &i2c4_sleep_pins_z_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN i2c4 */
+	/* USER CODE END i2c4 */
+};
+
+&ltdc{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&ltdc_pins_mx>;
+	pinctrl-1 = <&ltdc_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN ltdc */
+
+	powerdown-gpios = <&gpiof 2 1>;
+	
+	
+	port{
+		#address-cells = <1>;
+		#size-cells = <0>;
+		
+		ltdc_out_rgb: endpoint@0 {
+			reg = <0>;
+			remote-endpoint = <&panel_in_rgb>;
+		};
+	};
+	
+	/* USER CODE END ltdc */
+};
+
+&mdma1{
+	status = "okay";
+
+	/* USER CODE BEGIN mdma1 */
+	/* USER CODE END mdma1 */
+};
+
+&rcc{
+	u-boot,dm-pre-reloc;
+	status = "okay";
+
+	/* USER CODE BEGIN rcc */
+	/* USER CODE END rcc */
+};
+
+&rtc{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&rtc_pins_mx>;
+	pinctrl-1 = <&rtc_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN rtc */
+//	pinctrl-names = "default";
+//	pinctrl-0 = <&rtc_pins_mx>;
+	st,lsco = <RTC_OUT2_RMP>;
+//	status = "okay";
+	/* USER CODE END rtc */
+};
+
+&sdmmc1{
+	u-boot,dm-pre-reloc;
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc1_pins_mx>;
+	pinctrl-1 = <&sdmmc1_opendrain_pins_mx>;
+	pinctrl-2 = <&sdmmc1_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN sdmmc1 */
+	broken-cd;
+	disable-wp;
+	st,neg-edge;
+	bus-width = <4>;
+	max-frequency = <10000000>;
+	vmmc-supply = <&v3v3>;	
+	/* USER CODE END sdmmc1 */
+};
+
+&sdmmc3{
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc3_pins_mx>;
+	pinctrl-1 = <&sdmmc3_opendrain_pins_mx>;
+	pinctrl-2 = <&sdmmc3_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN sdmmc3 */
+	#address-cells = <1>;
+	#size-cells = <0>;
+	u-boot,dm-pre-reloc;
+	arm,primecell-periphid = <0x10153180>;
+	non-removable;
+	st,neg-edge;
+	bus-width = <4>;
+	max-frequency = <25000000>;
+	vmmc-supply = <&v3v3>;
+	mmc-pwrseq = <&wifi_pwrseq>;
+
+	brcmf: wifi@1 {
+		compatible = "brcm,bcm4329-fmac";
+		reg = <1>;
+	};
+	/* USER CODE END sdmmc3 */
+};
+
+&tamp{
+	status = "okay";
+
+	/* USER CODE BEGIN tamp */
+	/* USER CODE END tamp */
+};
+
+&timers12{
+	status = "okay";
+
+	/* USER CODE BEGIN timers12 */
+	/* USER CODE END timers12 */
+};
+
+&uart4{
+	u-boot,dm-pre-reloc;
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&uart4_pins_mx>;
+	pinctrl-1 = <&uart4_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN uart4 */
+	/* USER CODE END uart4 */
+};
+
+&uart7{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&uart7_pins_mx>;
+	pinctrl-1 = <&uart7_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN uart7 */
+    	vmmc-supply = <&reg_bl>;
+    	linux,rs485-enabled-at-boot-time;
+    	/*st,hw-flow-ctrl;*/
+	/* USER CODE END uart7 */
+};
+
+&uart8{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&uart8_pins_mx>;
+	pinctrl-1 = <&uart8_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN uart8 */
+	/* USER CODE END uart8 */
+};
+
+&usart1{
+	u-boot,dm-pre-reloc;
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&usart1_pins_z_mx>;
+	pinctrl-1 = <&usart1_sleep_pins_z_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN usart1 */
+	/* USER CODE END usart1 */
+};
+
+&usart3{
+	u-boot,dm-pre-reloc;
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&usart3_pins_mx>;
+	pinctrl-1 = <&usart3_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN usart3 */
+	/* USER CODE END usart3 */
+};
+
+&usbh_ehci{
+	status = "okay";
+
+	/* USER CODE BEGIN usbh_ehci */
+	
+	phys = <&usbphyc_port0>;
+	phy-names = "usb";
+	
+	/* USER CODE END usbh_ehci */
+};
+
+&usbh_ohci{
+	status = "okay";
+
+	/* USER CODE BEGIN usbh_ohci */
+	
+	phys = <&usbphyc_port0>;
+	phy-names = "usb";
+	
+	/* USER CODE END usbh_ohci */
+};
+
+&usbotg_hs{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&usb_otg_hs_pins_mx>;
+	pinctrl-1 = <&usb_otg_hs_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN usbotg_hs */
+	/* USER CODE END usbotg_hs */
+};
+
+&usbphyc{
+	status = "okay";
+
+	/* USER CODE BEGIN usbphyc */
+	/* USER CODE END usbphyc */
+};
+
+&usbphyc_port0{
+	status = "okay";
+
+	/* USER CODE BEGIN usbphyc_port0 */
+	st,phy-tuning = <&usb_phy_tuning>;
+	/* USER CODE END usbphyc_port0 */
+};
+
+&usbphyc_port1{
+	status = "okay";
+
+	/* USER CODE BEGIN usbphyc_port1 */
+	st,phy-tuning = <&usb_phy_tuning>;
+	/* USER CODE END usbphyc_port1 */
+};
+
+/* USER CODE BEGIN addons */
+/* USER CODE END addons */
+
